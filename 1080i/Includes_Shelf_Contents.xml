<?xml version="1.0" encoding="UTF-8"?>
<includes>

  <include name="HomeShelf">
    <param name="xoffset"/>
    <param name="yoffset"/>
    <param name="shelfwidth"/>
    <definition>
      <control type="image" description="Single line shelf BG XBMC only">
        <visible>!Skin.HasSetting(plexbmc) + [Control.IsVisible(111) | Control.IsVisible(211) | [Control.IsVisible(311) + !Control.IsVisible(312)] | [!Control.IsVisible(311) + Control.IsVisible(312)] | [Control.IsVisible(411) + !Control.IsVisible(413)] | [!Control.IsVisible(411) + Control.IsVisible(413)] | [Control.IsVisible(511) + !Control.IsVisible(513)] | [!Control.IsVisible(511) + Control.IsVisible(513)] | [Control.IsVisible(514) + !Control.IsVisible(515)] | [!Control.IsVisible(514) + Control.IsVisible(515)]]</visible>
        <posx>$PARAM[xoffset]</posx>
        <posy>$PARAM[yoffset]</posy>
        <width>$PARAM[shelfwidth]</width>
        <height>390</height>
        <texture border="0,40,0,40">home/OverlayRA2T.png</texture>
      </control>
      <control type="image" description="Double line shelfBG 2 XBMC only">
        <animation effect="slide" start="0,0" end="0,-162" time="0" delay="0" condition="true">conditional</animation>
        <visible>!Skin.HasSetting(plexbmc) + [[Control.IsVisible(311) + Control.IsVisible(312)] | [Control.IsVisible(411) + Control.IsVisible(413)] | [Control.IsVisible(511) + Control.IsVisible(513)] | [Control.IsVisible(514) + Control.IsVisible(515)]]</visible>
        <posx>$PARAM[xoffset]</posx>
        <posy>$PARAM[yoffset]</posy>
        <width>$PARAM[shelfwidth]</width>
        <height>720</height>
        <texture border="0,40,0,40">home/OverlayRA2T.png</texture>
      </control>
      <control type="image" description="Single line shelf BG Plexbmc only">
        <visible>Skin.HasSetting(plexbmc) + [Control.IsVisible(111) | Control.IsVisible(211) | Control.IsVisible(212) | [Integer.IsGreater(Container(311).NumItems,0) + !Integer.IsGreater(Container(312).NumItems,0)] | [!Integer.IsGreater(Container(311).NumItems,0) + Integer.IsGreater(Container(312).NumItems,0)] | [Integer.IsGreater(Container(411).NumItems,0) + !Integer.IsGreater(Container(413).NumItems,0)] | [!Integer.IsGreater(Container(411).NumItems,0) + Integer.IsGreater(Container(413).NumItems,0)] | Control.IsVisible(511) | Control.IsVisible(900) | Control.IsVisible(901)]</visible>
        <posx>$PARAM[xoffset]</posx>
        <posy>$PARAM[yoffset]</posy>
        <width>$PARAM[shelfwidth]</width>
        <height>390</height>
        <texture border="0,40,0,40">home/OverlayRA2T.png</texture>
      </control>
      <control type="image" description="Double line shelf BG 2 Plexbmc only">
        <animation effect="slide" start="0,0" end="0,-162" time="0" delay="0" condition="true">conditional</animation>
        <visible>Skin.HasSetting(plexbmc) + [[Integer.IsGreater(Container(311).NumItems,0) + Integer.IsGreater(Container(312).NumItems,0)] | [Integer.IsGreater(Container(411).NumItems,0) + Integer.IsGreater(Container(413).NumItems,0)]]</visible>
        <posx>$PARAM[xoffset]</posx>
        <posy>$PARAM[yoffset]</posy>
        <width>$PARAM[shelfwidth]</width>
        <height>720</height>
        <texture border="0,40,0,40">home/OverlayRA2T.png</texture>
      </control>
      <control type="group">
        <animation effect="slide" start="0,0" end="0,-100" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
        <include condition="!Skin.HasSetting(Hide.Favourites)">Favourite.List</include>
        <include condition="PVR.HasTVChannels | PVR.HasRadioChannels">PVR.List</include>
        <include condition="Skin.HasSetting(Shelf.Addons)">Addons.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.Movies.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.MusicVideos.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.Episodes.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_RecentItems),true)">Recent.Albums.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + [String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true) | String.IsEqual(Window(Home).Property(SkinWidgets_RandomItems),true)]">Recommended.And.Random.Movies.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">Recommended.MusicVideos.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">Recommended.Episodes.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + !Skin.HasSetting(plexbmc) + String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">Recommended.Albums.List</include>
        <include condition="!Skin.HasSetting(Hide.RecentlyAdded) + Skin.HasSetting(plexbmc)">Plexbmc_Shelf</include>
      </control>
    </definition>
  </include>

  <include name="RecordingContentItem">
    <param name="recordingchannelicon" default="PVR.NextRecordingChannelIcon"/>
    <param name="recordingstatus" default="img/PVR-HasTimer.png"/>
    <param name="recordingheader" default="$LOCALIZE[19157]"/>
    <param name="recordingtime" default="PVR.NextRecordingDateTime"/>
    <param name="recordingtitle" default="PVR.NextRecordingTitle"/>
    <param name="recordingchannel" default="PVR.NextRecordingChannel"/>
    <definition>
      <control type="image">
        <left>1065</left>
        <top>70</top>
        <width>855</width>
        <height>140</height>
        <texture>img/gradient.png</texture>
      </control>
      <control type="image" description="Recording Channel Icon">
        <posx>1750</posx>
        <posy>70</posy>
        <width>140</width>
        <height>140</height>
        <aspectratio>keep</aspectratio>
        <texture background="true" fallback="img/DefaultVideoCover.png">$INFO[$PARAM[recordingchannelicon]]</texture>
        <bordersize>10</bordersize>
      </control>
      <control type="image">
        <posx>1710</posx>
        <posy>85</posy>
        <width>30</width>
        <height>30</height>
        <aspectratio>keep</aspectratio>
        <texture>$PARAM[recordingstatus]</texture>
      </control>
      <control type="label">
        <description>Next Timer Header label</description>
        <left>1390</left>
        <top>70</top>
        <height>55</height>
        <width>310</width>
        <label>$PARAM[recordingheader]</label>
        <textcolor>Highlight</textcolor>
        <align>right</align>
        <aligny>center</aligny>
      </control>
      <control type="label" description="Recording time">
        <description>NextRecordingDateTime</description>
        <left>1320</left>
        <top>110</top>
        <width>420</width>
        <height>55</height>
        <label>$INFO[$PARAM[recordingtime],$LOCALIZE[19126] - ]</label>
        <align>right</align>
        <scroll>true</scroll>
      </control>
      <control type="textbox" description="Recording title and channel">
        <posx>940</posx>
        <posy>155</posy>
        <width>800 </width>
        <height>55</height>
        <align>right</align>
        <font>Details</font>
        <textcolor>White</textcolor>
        <label>[COLOR=White]$INFO[$PARAM[recordingtitle]][/COLOR][COLOR=Highlight] ([/COLOR]$INFO[$PARAM[recordingchannel]][COLOR=Highlight])[/COLOR]</label>
      </control>
    </definition>
  </include>

  <include name="PVR.List">
    <control type="group" description="Recording widget">
      <visible>[Container(300).HasFocus(300) | Container(300).HasFocus(301)] + [PVR.IsRecording | PVR.HasNonRecordingTimer]</visible>
      <animation effect="slide" start="0,0" end="0,150" time="0" condition="PVR.IsRecording">conditional</animation>
      <animation effect="slide" start="0,0" end="0,100" time="0" condition="!Skin.HasSetting(VerticalHome) | !String.IsEmpty(Weather.Plugin)">conditional</animation>
      <include content="RecordingContentItem">
      </include>        
    </control>
    <control type="group" description="now recording widget">
      <visible>[Container(300).HasFocus(300) | Container(300).HasFocus(301)] + [PVR.IsRecording]</visible>
      <animation effect="slide" start="0,0" end="0,100" time="0" condition="!Skin.HasSetting(VerticalHome) | !String.IsEmpty(Weather.Plugin)">conditional</animation>
      <include content="RecordingContentItem">
        <param name="recordingchannelicon" value="PVR.NowRecordingChannelIcon"/>
        <param name="recordingstatus" value="img/PVR-IsRecording.png"/>
        <param name="recordingheader" value="$LOCALIZE[19158]"/>
        <param name="recordingtime" value="PVR.NowRecordingDateTime"/>
        <param name="recordingtitle" value="PVR.NowRecordingTitle"/>
        <param name="recordingchannel" value="PVR.NowRecordingChannel"/>
      </include>        
    </control>
  </include>

  <include name="FavouriteAddonItem">
    <param name="parentitemid" default=""/>
    <param name="itemid" default=""/>
    <param name="itemvisible" default=""/>
    <param name="itemcontent" default=""/>
    <definition>
      <control type="label" description="Header">
        <visible>Control.IsVisible($PARAM[itemid])</visible>
        <include>RecentlyAdded_Header</include>
        <label>$INFO[Container($PARAM[itemid]).ListItem.Property(ItemType)]</label>
      </control>
      <control type="label" description="Label">
        <visible>Control.HasFocus($PARAM[itemid])</visible>
        <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
        <include>RecentlyAdded_Label</include>
        <label>$INFO[Container($PARAM[itemid]).ListItem.Label]</label>
      </control>
      <control type="fixedlist" id="$PARAM[itemid]" description="Favourites">
        <visible>$PARAM[itemvisible]</visible>
        <visible>Container(300).HasFocus($PARAM[parentitemid])</visible>
        <onright>$PARAM[itemid]</onright>
        <onup>300</onup>
        <ondown>300</ondown>
        <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
        <onleft condition="!Skin.HasSetting(VerticalHome)">$PARAM[itemid]</onleft>
        <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
        <include content="Shelf_Addons">
          <param name="id1" value="$PARAM[itemid]"/>
        </include>
        <content>
          <include>$PARAM[itemcontent]</include>
        </content>
      </control>
    </definition>
  </include>

  <include name="Favourite.List">
    <include content="FavouriteAddonItem">
      <param name="parentitemid" value="7"/>
      <param name="itemid" value="111"/>
      <param name="itemvisible" value="!String.IsEmpty(Window(Home).Property(favourite.1.path))"/>
      <param name="itemcontent" value="FavouriteContent"/>
    </include>
  </include>
  <include name="Addons.List">
    <include content="FavouriteAddonItem">
      <param name="parentitemid" value="2"/>
      <param name="itemid" value="211"/>
      <param name="itemvisible" value="!String.IsEmpty(Skin.String(ShelfAddons.1.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.2.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.3.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.4.Label)) | !String.IsEmpty(Skin.String(ShelfAddons.5.Label))"/>
      <param name="itemcontent" value="AddonContent"/>
    </include>
  </include>

  <include name="Recent.Movies.List">
    <control type="label" description="Header">
      <visible>Control.IsVisible(311)</visible>
      <include>RecentlyAdded_Header</include>
      <label>$INFO[Container(311).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(311)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>RecentlyAdded_Label</include>
      <label>$INFO[Container(311).ListItem.Label]</label>
    </control>
    <control type="fixedlist" id="311" description="Movies XBMC">
      <visible>!String.IsEmpty(Window(Home).Property(RecentMovie.1.Title))</visible>
      <visible>Container(300).HasFocus(4)</visible>
      <onright>311</onright>
      <onup>300</onup>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">311</onleft>
      <ondown condition="Control.IsVisible(312)">312</ondown>
      <ondown condition="!Control.IsVisible(312)">300</ondown>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Posters">
        <param name="id1" value="311"/>
        <param name="id2" value="312"/>
        <param name="offset" value="-162"/>
      </include>
      <content>
        <include>RecentMovieContent</include>
      </content>
    </control>
  </include>
  <include name="Recommended.And.Random.Movies.List">
    <control type="label" description="Header">
      <visible>Control.IsVisible(312)</visible>
      <include>Recommended_Header</include>
      <label>$INFO[Container(312).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(312)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>Recommended_Label</include>
      <label>$INFO[Container(312).ListItem.Label]</label>
    </control>
    <control type="fixedlist" id="312" description="TOP Shortcuts">
      <visible>![String.IsEmpty(Window(Home).Property(RecommendedMovie.1.Title)) + String.IsEmpty(Window(Home).Property(RandomMovie.1.Title))]</visible>
      <visible>Container(300).HasFocus(4)</visible>
      <onright>312</onright>
      <onup condition="Control.IsVisible(311)">311</onup>
      <onup condition="!Control.IsVisible(311)">300</onup>
      <ondown>300</ondown>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">312</onleft>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Posters">
        <param name="id1" value="312"/>
        <param name="id2" value="311"/>
        <param name="offset" value="162"/>
      </include>
      <content>
        <include condition="String.IsEqual(Window(Home).Property(SkinWidgets_Recommended),true)">RecommendedMovieContent</include>
        <include condition="String.IsEqual(Window(Home).Property(SkinWidgets_RandomItems),true)">RandomMovieContent</include>
      </content>
    </control>
  </include>
  <include name="Recent.MusicVideos.List">
    <control type="label" description="Header recent MusicVideos">
      <visible>Control.IsVisible(514)</visible>
      <include>RecentlyAdded_Header</include>
      <label>$INFO[Container(514).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(514)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>RecentlyAdded_Label</include>
      <label>$INFO[Container(514).ListItem.Property(ShelfLabel)]</label>
    </control>
    <control type="fixedlist" id="514" description="Recent MusicVideos">
      <visible>!String.IsEmpty(Window(Home).Property(RecentMusicVideo.1.Title))</visible>
      <visible>Container(300).HasFocus(14)</visible>
      <onright>514</onright>
      <onup>300</onup>
      <ondown condition="Control.IsVisible(515)">515</ondown>
      <ondown condition="!Control.IsVisible(515)">300</ondown>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">514</onleft>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Albums">
        <param name="id1" value="514"/>
        <param name="id2" value="515"/>
        <param name="offset" value="-162"/>
      </include>
      <content>
        <include>RecentMusicVideoContent</include>
      </content>
    </control>
  </include>
  <include name="Recommended.MusicVideos.List">
    <control type="label" description="Header recommended MusicVideos">
      <visible>Control.IsVisible(515)</visible>
      <include>Recommended_Header</include>
      <label>$INFO[Container(515).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(515)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>Recommended_Label</include>
      <label>$INFO[Container(515).ListItem.Property(ShelfLabel)]</label>
    </control>
    <control type="fixedlist" id="515" description="Recommended MusicVideos">
      <visible>!String.IsEmpty(Window(Home).Property(RecommendedMusicVideo.1.Title))</visible>
      <visible>Container(300).HasFocus(14)</visible>
      <onright>515</onright>
      <onup condition="Control.IsVisible(514)">514</onup>
      <onup condition="!Control.IsVisible(514)">300</onup>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">515</onleft>
      <ondown>300</ondown>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Albums">
        <param name="id1" value="515"/>
        <param name="id2" value="514"/>
        <param name="offset" value="162"/>
      </include>
      <content>
        <include>RecommendedMusicVideoContent</include>
      </content>
    </control>
  </include>
  <include name="Recent.Episodes.List">
    <control type="label" description="Header">
      <visible>Control.IsVisible(411)</visible>
      <include>RecentlyAdded_Header</include>
      <label>$INFO[Container(411).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(411)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>RecentlyAdded_Label</include>
      <label>$INFO[Container(411).ListItem.Label]</label>
    </control>
    <control type="fixedlist" id="411" description="TV Shows XBMC">
      <visible>!String.IsEmpty(Window(Home).Property(RecentEpisode.1.Title))</visible>
      <visible>Container(300).HasFocus(5)</visible>
      <onright>411</onright>
      <onup>300</onup>
      <ondown condition="Control.IsVisible(413)">413</ondown>
      <ondown condition="!Control.IsVisible(413)">300</ondown>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">411</onleft>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Episodes">
        <param name="id1" value="411"/>
        <param name="id2" value="413"/>
        <param name="offset" value="-162"/>
      </include>
      <content>
        <include>RecentEpisodeContent</include>
      </content>
    </control>
  </include>
  <include name="Recommended.Episodes.List">
    <control type="label" description="Header">
      <visible>Control.IsVisible(413)</visible>
      <include>Recommended_Header</include>
      <label>$INFO[Container(413).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(413)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>Recommended_Label</include>
      <label>$INFO[Container(413).ListItem.Label2,,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container(413).ListItem.Label]</label>
    </control>
    <control type="fixedlist" id="413" description="TV Shows XBMC Widgets">
      <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.1.Title))</visible>
      <visible>Container(300).HasFocus(5)</visible>
      <onright>413</onright>
      <onup condition="Control.IsVisible(411)">411</onup>
      <onup condition="!Control.IsVisible(411)">300</onup>
      <ondown>300</ondown>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">413</onleft>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Episodes">
        <param name="id1" value="413"/>
        <param name="id2" value="411"/>
        <param name="offset" value="162"/>
      </include>     
      <content>
        <include>RecommendedEpisodeContent</include>
      </content>
    </control>
  </include>
  <include name="Recent.Albums.List">
    <control type="label" description="Header">
      <visible>Control.IsVisible(511)</visible>
      <include>RecentlyAdded_Header</include>
      <label>$INFO[Container(511).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(511)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>RecentlyAdded_Label</include>
      <label>$INFO[Container(511).ListItem.Property(ShelfLabel)]</label>
    </control>
    <control type="fixedlist" id="511" description="TOP Shortcuts">
      <visible>!String.IsEmpty(Window(Home).Property(RecentAlbum.1.Title))</visible>
      <visible>Container(300).HasFocus(6)</visible>
      <onright>511</onright>
      <onup>300</onup>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">511</onleft>
      <ondown condition="Control.IsVisible(513)">513</ondown>
      <ondown condition="!Control.IsVisible(513)">300</ondown>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Albums">
        <param name="id1" value="511"/>
        <param name="id2" value="513"/>
        <param name="offset" value="-162"/>
      </include>
      <content>
        <include>RecentAlbumContent</include>
      </content>
    </control>
  </include>
  <include name="Recommended.Albums.List">
    <control type="label" description="Header">
      <visible>Control.IsVisible(513)</visible>
      <include>Recommended_Header</include>
      <label>$INFO[Container(513).ListItem.Property(ItemType)]</label>
    </control>
    <control type="label" description="Label">
      <visible>Control.HasFocus(513)</visible>
      <animation effect="slide" start="0,0" end="-518,0" time="0" condition="!Skin.HasSetting(VerticalHome)">conditional</animation>
      <include>Recommended_Label</include>
      <label>$INFO[Container(513).ListItem.Property(ShelfLabel)]</label>
    </control>
    <control type="fixedlist" id="513" description="TOP Shortcuts">
      <visible>![Skin.HasSetting(Hide.RecentlyAdded) | String.IsEmpty(Window(Home).Property(RecommendedAlbum.1.Title))]</visible>
      <visible>Container(300).HasFocus(6)</visible>
      <onright>513</onright>
      <onup condition="Control.IsVisible(511)">511</onup>
      <onup condition="!Control.IsVisible(511)">300</onup>
      <ondown>300</ondown>
      <onleft condition="Skin.HasSetting(VerticalHome)">300</onleft>
      <onleft condition="!Skin.HasSetting(VerticalHome)">513</onleft>
      <include condition="!Skin.HasSetting(VerticalHome)">Horizontal_Shelf_Commons</include>
      <include content="Shelf_Albums">
        <param name="id1" value="513"/>
        <param name="id2" value="511"/>
        <param name="offset" value="162"/>
      </include>
      <content>
        <include>RecommendedAlbumContent</include>
      </content>
    </control>
  </include>

  <include name="FavouriteContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(favourite.$PARAM[itemid].path))</visible>
        <label>$INFO[Window(Home).Property(favourite.$PARAM[itemid].name)]</label>
        <thumb>$INFO[Window(Home).Property(favourite.$PARAM[itemid].thumb)]</thumb>
        <property name="ItemType">$LOCALIZE[1036]</property>
        <onclick>Window(Home).Property(favourite.$PARAM[itemid].path)</onclick>
      </item>
    </definition>
  </include>
  <include name="FavouriteContent">
    <include content="FavouriteContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="FavouriteContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="AddonContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Skin.String(ShelfAddons.$PARAM[itemid].Label))</visible>
        <label>$INFO[system.addontitle(Skin.String(ShelfAddons.$PARAM[itemid].Label))]</label>
        <thumb>$INFO[system.addonicon(Skin.String(ShelfAddons.$PARAM[itemid].Label))]</thumb>
        <property name="ItemType">$LOCALIZE[24001]</property>
        <onclick>RunAddon($INFO[Skin.String(ShelfAddons.$PARAM[itemid].Label)])</onclick>
      </item>
    </definition>
  </include>
  <include name="AddonContent">
    <include content="AddonContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="AddonContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecentMovieContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecentMovie.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Year), • ]$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]]$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Rating), • ][/COLOR]</label>
        <property name="Widgets">true</property>
        <property name="InProgress">$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Resume)]</property>
        <property name="Watched">$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Watched)]</property>
        <thumb>$INFO[Window(Home).Property(RecentMovie.$PARAM[itemid].Art(poster))]</thumb>
        <property name="ItemType">$LOCALIZE[31961]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentMovie.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RecentMovieContent">
    <include content="RecentMovieContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecentMovieContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecommendedMovieContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecommendedMovie.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Year), • ]$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]]$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Rating), • ][/COLOR]</label>
        <property name="Widgets">true</property>
        <property name="InProgress">$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Resume)]</property>
        <property name="Watched">$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Watched)]</property>
        <thumb>$INFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].Art(poster))]</thumb>
        <property name="ItemType">$LOCALIZE[31966]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedMovie.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RecommendedMovieContent">
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecommendedMovieContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RandomMovieContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RandomMovie.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Year), • ]$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]]$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Rating), • ][/COLOR]</label>
        <property name="Widgets">true</property>
        <property name="InProgress">$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Resume)]</property>
        <property name="Watched">$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Watched)]</property>
        <thumb>$INFO[Window(Home).Property(RandomMovie.$PARAM[itemid].Art(poster))]</thumb>
        <property name="ItemType">$LOCALIZE[31987]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RandomMovie.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RandomMovieContent">
    <include content="RandomMovieContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RandomMovieContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

   <include name="RecentEpisodeContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecentEpisode.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].TVshowTitle), • ]$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].EpisodeNo), • ]$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]][/COLOR]</label>
        <property name="SeasonEpisode">$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].EpisodeNo)]</property>
        <thumb>$INFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].Art(tvshow.poster))]</thumb>
        <property name="ItemType">$LOCALIZE[31961]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentEpisode.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RecentEpisodeContent">
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecentEpisodeContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecommendedEpisodeContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].TVshowTitle), • ]$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].EpisodeNo), • ]$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Runtime), • , $LOCALIZE[12391]][/COLOR]</label>
        <property name="SeasonEpisode">$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].EpisodeNo)]</property>
        <thumb>$INFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].Art(tvshow.poster))]</thumb>
        <property name="ItemType">$LOCALIZE[31966]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RecommendedEpisodeContent">
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecommendedEpisodeContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecentAlbumContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecentAlbum.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Artist)]</label>
        <label2>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Title)]</label2>
        <thumb>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Thumb)]</thumb>
        <property name="ShelfLabel">$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Year), • ][/COLOR]</property>
        <property name="ItemType">$LOCALIZE[31961]</property>
        <onclick>PlayList.Clear</onclick>
        <onclick>$INFO[Window(Home).Property(RecentAlbum.$PARAM[itemid].Play)]</onclick>
      </item>
    </definition>
  </include>
  <include name="RecentAlbumContent">
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecentAlbumContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecommendedAlbumContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Artist)]</label>
        <label2>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Title)]</label2>
        <thumb>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Thumb)]</thumb>
        <property name="ShelfLabel">$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Year), • ][/COLOR]</property>
        <property name="ItemType">$LOCALIZE[31966]</property>
        <onclick>PlayList.Clear</onclick>
        <onclick>$INFO[Window(Home).Property(RecommendedAlbum.$PARAM[itemid].Play)]</onclick>
      </item>
    </definition>
  </include>
  <include name="RecommendedAlbumContent">
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecommendedAlbumContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecentMusicVideoContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
        <visible>!String.IsEmpty(Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Artist)]</label>
        <label2>$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Title)]</label2>
        <thumb>$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Thumb)]</thumb>
        <property name="ShelfLabel">$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].Year), • ][/COLOR]</property>      
        <property name="ItemType">$LOCALIZE[31961]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentMusicVideo.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RecentMusicVideoContent">
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecentMusicVideoContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecommendedMusicVideoContentItem">
    <param name="itemid" default=""/>
    <definition>
      <item id="$PARAM[itemid]">
      <visible>!String.IsEmpty(Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Title))</visible>
        <label>$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Artist)]</label>
        <label2>$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Title)]</label2>
        <thumb>$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Thumb)]</thumb>
        <property name="ShelfLabel">$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Title)][COLOR=White]$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Artist), • ]$INFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].Year), • ][/COLOR]</property>      
        <property name="ItemType">$LOCALIZE[31961]</property>
        <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].File)])</onclick>
      <property name="ItemType">$LOCALIZE[31966]</property>
      <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedMusicVideo.$PARAM[itemid].File)])</onclick>
      </item>
    </definition>
  </include>
  <include name="RecommendedMusicVideoContent">
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="1"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="2"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="3"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="4"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="5"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="6"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="7"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="8"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="9"/>
    </include>
    <include content="RecommendedMusicVideoContentItem">
      <param name="itemid" value="10"/>
    </include>
  </include>

  <include name="RecentlyAdded_Header">
    <animation effect="slide" start="0,0" end="0,-162" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(312) | Control.IsVisible(413) | Control.IsVisible(513) | Control.IsVisible(515)]">Conditional</animation>
  <animation effect="slide" start="0,0" end="0,-162" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(312).NumItems,0) | Integer.IsGreater(Container(413).NumItems,0)]">Conditional</animation>
    <align>right</align>
    <posx>20r</posx>
    <posy>339</posy>
    <height>45</height>
    <width>400</width>
    <textcolor>Highlight</textcolor>
    <font>ListDetails</font>
  </include>
  <include name="Recommended_Header">
    <animation effect="slide" start="0,0" end="0,522" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(311) | Control.IsVisible(411) |  Control.IsVisible(511) | Control.IsVisible(514)]">Conditional</animation>
  <animation effect="slide" start="0,0" end="0,522" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(311).NumItems,0) | Integer.IsGreater(Container(411).NumItems,0) | Integer.IsGreater(Container(511).NumItems,0)]">Conditional</animation>
    <align>right</align>
    <posx>20r</posx>
    <posy>339</posy>
    <height>45</height>
    <width>400</width>
    <textcolor>Highlight</textcolor>
    <font>ListDetails</font>
  </include>
  <include name="RecentlyAdded_Label">
    <animation effect="slide" start="0,0" end="0,-162" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(312) | Control.IsVisible(413) | Control.IsVisible(513) | Control.IsVisible(515)]">Conditional</animation>
  <animation effect="slide" start="0,0" end="0,-162" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(312).NumItems,0) | Integer.IsGreater(Container(413).NumItems,0)]">Conditional</animation>
    <posx>558</posx>
    <posy>339</posy>
    <height>45</height>
    <width>1080</width>
    <align>left</align>
    <textcolor>Highlight</textcolor>
    <font>ListDetails</font>
  </include>
  <include name="Recommended_Label">
    <animation effect="slide" start="0,0" end="0,522" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible(311) | Control.IsVisible(411) | Control.IsVisible(511) | Control.IsVisible(514)]">Conditional</animation>
  <animation effect="slide" start="0,0" end="0,522" time="0" condition="Skin.HasSetting(plexbmc) + [Integer.IsGreater(Container(311).NumItems,0) | Integer.IsGreater(Container(411).NumItems,0) | Integer.IsGreater(Container(511).NumItems,0) | Integer.IsGreater(Container(900).NumItems,0)]">Conditional</animation>
    <posx>558</posx>
    <posy>339</posy>
    <height>45</height>
    <width>1080</width>
    <align>left</align>
    <textcolor>Highlight</textcolor>
    <font>ListDetails</font>
  </include>
  
  <include name="Shelf_Posters">
    <param name="id1"/>
    <param name="id2"/>
    <param name="offset"/>
    <definition>  
      <animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible($PARAM[id1]) + Control.IsVisible($PARAM[id2])]">Conditional</animation>
      <animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="Skin.HasSetting(plexbmc) + Integer.IsGreater(Container($PARAM[id1]
        ).NumItems,0)">Conditional</animation>
      <include>VisibleFadeEffectDelayShelf</include>
      <posx>540</posx>
      <posy>378</posy>
      <width>1368</width>
      <height>327</height>
      <onleft>300</onleft>
      <onback>300</onback>
      <movement>4</movement>
      <orientation>horizontal</orientation>
      <itemlayout height="345" width="228">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>189</width>
          <height>285</height>
          <include>PosterThumb</include>
        </control>
        <control type="image">
          <posx>175</posx>
          <posy>273</posy>
          <width>33</width>
          <height>33</height>
          <texture>$VAR[Overlay]</texture>
        </control>
      </itemlayout>
      <focusedlayout height="345" width="228">
        <control type="image">
          <visible>Control.HasFocus($PARAM[id1])</visible>
          <posx>21</posx>
          <posy>21</posy>
          <width>189</width>
          <height>285</height>
          <include>PosterThumbFO</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>189</width>
          <height>285</height>
          <include>PosterThumb</include>
        </control>
        <control type="image">
          <posx>175</posx>
          <posy>273</posy>
          <width>33</width>
          <height>33</height>
          <texture>$VAR[Overlay]</texture>
        </control>
      </focusedlayout>
    </definition>
  </include>

  <include name="Shelf_Episodes">
    <param name="id1"/>
    <param name="id2"/>
    <param name="offset"/>
    <definition>  
      <animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible($PARAM[id1]) + Control.IsVisible($PARAM[id2])]">Conditional</animation>
      <animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="Skin.HasSetting(plexbmc) + Integer.IsGreater(Container($PARAM[id1]
        ).NumItems,0)">Conditional</animation>
      <include>VisibleFadeEffectDelayShelf</include>
      <posx>540</posx>
      <posy>378</posy>
      <width>1368</width>
      <height>327</height>
      <onleft>300</onleft>
      <onback>300</onback>
      <movement>4</movement>
      <orientation>horizontal</orientation>
      <itemlayout height="345" width="228">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>189</width>
          <height>285</height>
          <include>PosterThumb</include>
        </control>
        <control type="group">
          <posy>240</posy>
          <control type="image">
            <posx>21</posx>
            <posy>12</posy>
            <width>189</width>
            <height>44</height>
            <texture>img/OverlayStripe.png</texture>
          </control>
          <control type="label">
            <posx>23</posx>
            <width>185</width>
            <height>70</height>
            <font>font32_title</font>
            <align>center</align>
            <label>$INFO[ListItem.Property(SeasonEpisode)]</label>
          </control>
        </control>
      </itemlayout>
      <focusedlayout height="345" width="228">
        <control type="image">
          <visible>Control.HasFocus($PARAM[id1])</visible>
          <posx>21</posx>
          <posy>21</posy>
          <width>189</width>
          <height>285</height>
          <include>PosterThumbFO</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>189</width>
          <height>285</height>
          <include>PosterThumb</include>
        </control>
        <control type="group">
          <posy>240</posy>
          <control type="image">
            <posx>21</posx>
            <posy>12</posy>
            <width>189</width>
            <height>44</height>
            <texture>img/OverlayStripe.png</texture>
          </control>
          <control type="label">
            <posx>23</posx>
            <width>185</width>
            <height>70</height>
            <font>font32_title</font>
            <align>center</align>
            <label>$INFO[ListItem.Property(SeasonEpisode)]</label>
          </control>
        </control>
      </focusedlayout>
    </definition>
  </include>
  
  <include name="Shelf_Albums">
    <param name="id1"/>
    <param name="id2"/>
    <param name="offset"/>
    <definition>
      <animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="!Skin.HasSetting(plexbmc) + [Control.IsVisible($PARAM[id1]) + Control.IsVisible($PARAM[id2])]">Conditional</animation>
      <animation effect="slide" start="0,0" end="0,$PARAM[offset]" time="0" condition="Skin.HasSetting(plexbmc) + Integer.IsGreater(Container($PARAM[id1]).NumItems,0)">Conditional</animation>
      <include>VisibleFadeEffectDelayShelf</include>
      <posx>540</posx>
      <posy>378</posy>
      <width>1368</width>
      <height>327</height>
      <onleft>300</onleft>
      <onback>300</onback>
      <movement>4</movement>
      <orientation>horizontal</orientation>
      <itemlayout height="345" width="228">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>198</width>
          <height>198</height>
          <include>SquareThumb</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>240</posy>
          <width>198</width>
          <height>66</height>
          <bordersize>-3</bordersize>
          <texture border="8">img/WhiteRoundedT.png</texture>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>243</posy>
          <width>190</width>
          <height>30</height>
          <align>center</align>
          <font>font22</font>
          <scroll>false</scroll>
          <label>$INFO[ListItem.Label]</label>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>273</posy>
          <width>190</width>
          <height>30</height>
          <align>center</align>
          <font>font22</font>
          <scroll>false</scroll>
          <label>$INFO[ListItem.Label2]</label>
        </control>
      </itemlayout>
      <focusedlayout height="345" width="228" condition="Control.HasFocus($PARAM[id1])">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>198</width>
          <height>198</height>
          <include>SquareThumbFO</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>198</width>
          <height>198</height>
          <include>SquareThumb</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>240</posy>
          <width>198</width>
          <height>66</height>
          <bordersize>-3</bordersize>
          <texture border="8">img/WhiteRoundedT.png</texture>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>243</posy>
          <width>190</width>
          <height>30</height>
          <align>center</align>
          <font>font22</font>
          <scroll>false</scroll>
          <textcolor>Highlight</textcolor>
          <label>$INFO[ListItem.Label]</label>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>273</posy>
          <width>190</width>
          <height>30</height>
          <align>center</align>
          <font>font22</font>
          <scroll>false</scroll>
          <textcolor>Highlight</textcolor>
          <label>$INFO[ListItem.Label2]</label>
        </control>
      </focusedlayout>    
      <focusedlayout height="345" width="228" condition="!Control.HasFocus($PARAM[id1])">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>198</width>
          <height>198</height>
          <include>SquareThumb</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>240</posy>
          <width>198</width>
          <height>66</height>
          <bordersize>-3</bordersize>
          <texture border="8">img/WhiteRoundedT.png</texture>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>243</posy>
          <width>190</width>
          <height>30</height>
          <align>center</align>
          <font>font22</font>
          <scroll>false</scroll>
          <label>$INFO[ListItem.Label]</label>
        </control>
        <control type="label">
          <posx>25</posx>
          <posy>273</posy>
          <width>190</width>
          <height>30</height>
          <align>center</align>
          <font>font22</font>
          <scroll>false</scroll>
          <label>$INFO[ListItem.Label2]</label>
        </control>
      </focusedlayout>    
    </definition>
  </include>

  <include name="Shelf_Addons">
    <param name="id1"/>
    <definition>
      <include>VisibleFadeEffectDelayShelf</include>
      <posx>540</posx>
      <posy>378</posy>
      <width>1368</width>
      <height>327</height>
      <onleft>300</onleft>
      <onback>300</onback>
      <movement>4</movement>
      <orientation>horizontal</orientation>
      <itemlayout height="345" width="228">
        <control type="image">
          <posx>29</posx>
          <posy>29</posy>
          <width>182</width>
          <height>182</height>
          <aspectratio>keep</aspectratio>
          <include>SquareThumb</include>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>240</posy>
          <width>198</width>
          <height>66</height>
          <bordersize>-3</bordersize>
          <texture border="8">img/WhiteRoundedT.png</texture>
        </control>
        <control type="textbox">
          <posx>25</posx>
          <posy>243</posy>
          <width>190</width>
          <height>60</height>
          <align>center</align>
          <aligny>center</aligny>
          <font>font22</font>
          <label>$INFO[ListItem.Label]</label>
        </control>
      </itemlayout>
      <focusedlayout height="345" width="228" condition="Control.HasFocus($PARAM[id1])">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>198</width>
          <height>198</height>
          <aspectratio>keep</aspectratio>
          <include>SquareThumb</include>
          <bordertexture colordiffuse="Highlight" border="8">thumbs/SquareBG_FO2.png</bordertexture>
          <bordersize>8</bordersize>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>240</posy>
          <width>198</width>
          <height>66</height>
          <bordersize>-3</bordersize>
          <texture border="8">img/WhiteRoundedT.png</texture>
        </control>
        <control type="textbox">
          <posx>25</posx>
          <posy>243</posy>
          <width>190</width>
          <height>60</height>
          <align>center</align>
          <aligny>center</aligny>
          <font>font22</font>
          <label>$INFO[ListItem.Label]</label>
          <textcolor>Highlight</textcolor>
        </control>
      </focusedlayout>
      <focusedlayout height="345" width="228" condition="!Control.HasFocus($PARAM[id1])">
        <control type="image">
          <posx>21</posx>
          <posy>21</posy>
          <width>198</width>
          <height>198</height>
          <aspectratio>keep</aspectratio>
          <include>SquareThumb</include>
          <bordertexture border="8">-</bordertexture>
          <bordersize>8</bordersize>
        </control>
        <control type="image">
          <posx>21</posx>
          <posy>240</posy>
          <width>198</width>
          <height>66</height>
          <bordersize>-3</bordersize>
          <texture border="8">img/WhiteRoundedT.png</texture>
        </control>
        <control type="textbox">
          <posx>25</posx>
          <posy>243</posy>
          <width>190</width>
          <height>60</height>
          <align>center</align>
          <aligny>center</aligny>
          <font>font22</font>
          <label>$INFO[ListItem.Label]</label>
        </control>
      </focusedlayout>
    </definition>
  </include>
</includes>