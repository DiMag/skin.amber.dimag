<?xml version="1.0" encoding="UTF-8"?>
<includes>
  
  <variable name="TimeLabel" description="Date and time">
    <value condition="Window.IsActive(home)">[COLOR=Grey2]$INFO[System.Date,,[COLOR=Highlight]  •  [/COLOR]][/COLOR]$INFO[System.Time]</value>
    <value>$INFO[System.Time]</value>
  </variable>

  <variable name="TimerDetails">
    <value condition="String.IsEqual(ListItem.Comment,$LOCALIZE[13106])">[COLOR=Red]$INFO[ListItem.Comment]$INFO[ListItem.Date,  •  ][/COLOR]</value>
    <value>$INFO[ListItem.Comment]$INFO[ListItem.Date,  •  ]</value>
  </variable>

  <variable name="TVSearchStatus">
    <value condition="ListItem.IsRecording">$LOCALIZE[19043]</value>
    <value condition="ListItem.HasTimer">$LOCALIZE[31510]</value>
  </variable>

  <variable name="VideoTopHeading">
    <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Studio]</value>
    <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
    <value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist] $INFO[VideoPlayer.Album, - ]</value>
    <value condition="VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.ChannelNumberLabel,[COLOR=orange],[/COLOR]] $INFO[VideoPlayer.ChannelName,  •  ,]$INFO[VideoPlayer.ChannelGroup,  •  (,)]</value>
  </variable>

  <variable name="ShelfSize">
    <value condition="Skin.HasSetting(Shelf.DoubleHeight)">20</value>
    <value condition="!Skin.HasSetting(Shelf.DoubleHeight)">10</value>
  </variable>

  <variable name="FullScreenTitle">
    <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
    <value condition="VideoPlayer.Content(LiveTV) + Control.HasFocus(601)" >$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ]</value>
    <value condition="VideoPlayer.Content(LiveTV) + Control.HasFocus(602)" >$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ]</value>
    <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle,,[COLOR=Highlight]  •  [/COLOR]]$INFO[VideoPlayer.Season,$LOCALIZE[31973],.]$INFO[VideoPlayer.Episode,,[COLOR=Highlight]  •  [/COLOR]]$INFO[VideoPlayer.Title]</value>
    <value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist,, - ]$INFO[VideoPlayer.Album,, - ]$INFO[VideoPlayer.Title]</value>
    <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
  </variable>

  <variable name="VisualisationName">
    <value condition="!String.IsEmpty(Visualisation.Name)">$INFO[Visualisation.Name]</value>
    <value  condition="String.IsEmpty(Visualisation.Name)">$LOCALIZE[16018]</value>
  </variable>

  <variable name="DialogVideoInfoPoster">
    <value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Property(seasonThumb)) + Skin.HasSetting(plexbmc)">$INFO[ListItem.Property(seasonThumb)]</value>
    <value condition="String.IsEqual(ListItem.DBType,episode) + String.IsEmpty(ListItem.Property(seasonThumb)) + Skin.HasSetting(plexbmc)">$INFO[ListItem.Thumb]</value>

    <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
  </variable>

  <variable name="DialogFullScreenPlot">
    <value condition="Control.HasFocus(601) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
    <value condition="Control.HasFocus(601) + !String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
    <value condition="Control.HasFocus(602) + !String.IsEmpty(VideoPlayer.NextPlot)">$INFO[VideoPlayer.NextPlot]</value>
    <value condition="Control.HasFocus(602) + !String.IsEmpty(VideoPlayer.NextPlotOutline)">$INFO[VideoPlayer.NextPlotOutline]</value>
    <value condition="Control.HasFocus(603)">$INFO[VideoPlayer.CastAndRole]</value>
    <value condition="Control.HasFocus(604)">$INFO[PVR.ActStreamClient,[B]$LOCALIZE[19012]:[/B] ][CR]$INFO[PVR.ActStreamSignal,[B]$LOCALIZE[19008]:[/B] ][CR]$INFO[PVR.ActStreamSNR,[B]$LOCALIZE[19009]:[/B] ]</value>
  </variable>

  <variable name="DialogFullScreenBtn601">
    <value condition="Videoplayer.Content(LiveTV)">$LOCALIZE[19030]</value>
    <value>$LOCALIZE[207]</value>
  </variable>

  <variable name="VideoFullScreenPlot">
    <value condition="!String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
    <value condition="!String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
  </variable>

  $INFO[VideoPlayer.Plot]

  <variable name="VideoBottomHeading">
    <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Director,[COLOR=orange]$LOCALIZE[20339]:[/COLOR] ]</value>
    <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Season,[COLOR=orange]$LOCALIZE[20373]:[/COLOR] ]$INFO[VideoPlayer.Episode, • [COLOR=orange]$LOCALIZE[20359]:[/COLOR] ]</value>
    <value condition="VideoPlayer.Content(LiveTV)">$INFO[VideoPlayer.NextTitle,[COLOR=orange]$LOCALIZE[19031]:[/COLOR] ]</value>
  </variable>

  <variable name="PlaylistHeader" description="Header for MyPlaylist window">
    <value condition="Window.IsActive(videoplaylist)">$LOCALIZE[10522]</value>
    <value condition="Window.IsActive(musicplaylist)">$LOCALIZE[10517]</value>
  </variable>

  <variable name="VideoPlayerTitle">
    <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
    <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
  </variable>

  <variable name="MusicInfoHeader" description="Header for MusicInfo window">
    <value condition="Container.Content(Artists)">$LOCALIZE[21891]: [COLOR=White]$INFO[ListItem.Artist][/COLOR]</value>
    <value condition="Container.Content(Albums)">$LOCALIZE[10523]: [COLOR=White]$INFO[ListItem.Album][/COLOR]</value>
    <value condition="Container.Content(Songs)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
  </variable>

  <variable name="PVRChannelManagerHeader" description="Header for PVRChannelManager window">
    <value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19023]</value>
    <value>$LOCALIZE[19199] - $LOCALIZE[19024]</value>
  </variable>

  <variable name="MasterModeLabel">
    <value condition="System.IsMaster">$LOCALIZE[12332]</value>
    <value>$LOCALIZE[12333]</value>
  </variable>

  <variable name="PVRLargeIcon">
    <value condition="ListItem.IsFolder">$INFO[Container(80).ListItem.Icon]</value>
    <value>$INFO[ListItem.Icon]</value>
  </variable>

  <variable name="MediaListLabel">
    <value condition="Listitem.IsParentFolder">..</value>
    <value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
    <value>$INFO[ListItem.Label]</value>
  </variable>

  <variable name="MediaListLabel2">
    <value condition="Container.Content(albums) | Container.Content(songs)">$INFO[ListItem.artist]</value>
    <value></value>
  </variable>

  <variable name="AudioDSPItemDescription">
    <value condition="Control.HasFocus(20)">$INFO[Container(20).ListItem.Property(Description)]</value>
    <value condition="Control.HasFocus(21)">$INFO[Container(21).ListItem.Property(Description)]</value>
  </variable>

  <variable name="PosterLabel">
    <value condition="String.IsEqual(ListItem.DBType,season)">[B]$INFO[ListItem.Label][/B]</value>
    <value condition="String.IsEqual(ListItem.DBType,episode)">[B]$LOCALIZE[31973] $INFO[ListItem.Season,,.]$INFO[ListItem.Episode][/B]</value>
  </variable>

  <variable name="Overlay" description="Overlay image">
    <value condition="Skin.HasSetting(plexbmc) + ListItem.property(IsResumable)">$INFO[ListItem.Overlay]</value>
    <value condition="Skin.HasSetting(plexbmc) + ListItem.property(overlay)">$INFO[ListItem.property(overlay)]</value>
    <value condition="!Skin.HasSetting(Hide_InProgress_Marks) + !String.IsEmpty(ListItem.Overlay) + ListItem.IsResumable">OverlayInProgress.png</value>
    <value condition="Skin.HasSetting(Hide_InProgress_Marks) + !String.IsEmpty(ListItem.Overlay) + ListItem.IsResumable"></value>
    <value condition="!Skin.HasSetting(Hide_Watched_Marks) + !String.IsEmpty(ListItem.Overlay) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)">$INFO[ListItem.Overlay]</value>
    <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + !String.IsEmpty(ListItem.Overlay) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + [Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)]">OverlayUnwatched.png</value>
    <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + !String.IsEmpty(ListItem.Overlay) + String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)">$INFO[ListItem.Overlay]</value>
    <value></value>
  </variable>
  
  <variable name="Banner" description="TV Banners">
    <value condition="ListItem.IsParentFolder">DefaultBannerBack.png</value>
    <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
    <value condition="Skin.HasSetting(plexbmc)">$INFO[ListItem.Property(banner)]</value>
    <value>DefaultBanner.png</value>
  </variable>

  <variable name="Poster" description="Poster">
    <value condition="ListItem.IsParentFolder">DefaultPosterBack.png</value>
    <value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
    <value condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
    <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
    <value>DefaultPoster.png</value>
  </variable>

  <variable name="Studios">
    <value condition="!IsEmpty(Skin.String(studiosResource.path)) + SubString(Skin.String(studiosResource.path),coloured)">resource://resource.images.studios.coloured/$INFO[Listitem.Label,,.png]</value>
    <value condition="!IsEmpty(Skin.String(studiosResource.path)) + SubString(Skin.String(studiosResource.path),white)">resource://resource.images.studios.white/$INFO[Listitem.Label,,.png]</value>
  </variable>

  <variable name="MovieGenres">
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),arctic.zephyr)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[Listitem.Label,,.png]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),coloured)">resource://resource.images.moviegenreicons.coloured/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),filmstrip)">resource://resource.images.moviegenreicons.filmstrip/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),grey)">resource://resource.images.moviegenreicons.grey/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),poster)">resource://resource.images.moviegenreicons.poster/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),transparent)">resource://resource.images.moviegenreicons.transparent/$INFO[Listitem.Label,,.png]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),white)">resource://resource.images.moviegenreicons.white/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),xzener-flat)">resource://resource.images.moviegenreicons.xzener-flat/$INFO[Listitem.Label,,.png]</value>
    <value condition="!IsEmpty(Skin.String(moviegenreiconsResource.path)) + SubString(Skin.String(moviegenreiconsResource.path),xzener-reflection)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[Listitem.Label,,.png]</value>
  </variable>

  <variable name="MusicGenres">
    <value condition="!IsEmpty(Skin.String(musicgenreiconsResource.path)) + SubString(Skin.String(musicgenreiconsResource.path),grey)">resource://resource.images.musicgenreicons.grey/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(musicgenreiconsResource.path)) + SubString(Skin.String(musicgenreiconsResource.path),poster)">resource://resource.images.musicgenreicons.poster/$INFO[Listitem.Label,,.jpg]</value>
    <value condition="!IsEmpty(Skin.String(musicgenreiconsResource.path)) + SubString(Skin.String(musicgenreiconsResource.path),text)">resource://resource.images.musicgenreicons.text/$INFO[Listitem.Label,,.jpg]</value>
  </variable>

  <variable name="Square" description="Square">
    <value condition="ListItem.IsParentFolder">DefaultThumbBack.png</value>
    <value condition="Container.content(studios)">$VAR[Studios]</value>
    <value condition="Container.content(genres) + Window.IsActive(MyVideoNav.xml)">$VAR[MovieGenres]</value>
    <value condition="Container.content(genres) + Window.IsActive(MyMusicNav.xml)">$VAR[MusicGenres]</value>
    <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
    <value>DefaultThumb.png</value>
 </variable>

  <variable name="Episode" description="Episode">
    <value condition="ListItem.IsParentFolder">DefaultEpisodeBack.png</value>
    <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
    <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
    <value>DefaultEpisode.png</value>
 </variable>

  <variable name="WeatherIconPath"> 
    <value condition="!String.IsEmpty(Skin.String(WeatherIconsResource.path))">$INFO[Skin.String(WeatherIconsResource.path)]</value> 
    <value>resource://resource.images.weathericons.default/</value> 
  </variable> 

  <variable name="LibraryStats" description="Home page library statistics">
    <value condition="Integer.IsGreater(Window(Home).Property(MusicVideos.Unwatched),0) + Library.HasContent(musicvideos) + Container(300).HasFocus(14)">$LOCALIZE[20389]$INFO[Window(Home).Property(MusicVideos.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[16101]$INFO[Window(Home).Property(MusicVideos.Unwatched), ]</value>
    <value condition="!Integer.IsGreater(Window(Home).Property(MusicVideos.Unwatched),0) + Library.HasContent(musicvideos) + Container(300).HasFocus(14)">$LOCALIZE[20389]$INFO[Window(Home).Property(MusicVideos.Count), ,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Integer.IsGreater(Window(Home).Property(Movies.Unwatched),0) + Library.HasContent(movies) + Container(300).HasFocus(4)">$LOCALIZE[20342]$INFO[Window(Home).Property(Movies.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[16101]$INFO[Window(Home).Property(Movies.Unwatched), ]</value>
    <value condition="!Integer.IsGreater(Window(Home).Property(Movies.Unwatched),0) + Library.HasContent(movies) + Container(300).HasFocus(4)">$LOCALIZE[20342]$INFO[Window(Home).Property(Movies.Count), ,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Integer.IsGreater(Window(Home).Property(Episodes.Unwatched),0) + Library.HasContent(tvshows) + Container(300).HasFocus(5)">$LOCALIZE[20360]$INFO[Window(Home).Property(Episodes.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[16101]$INFO[Window(Home).Property(Episodes.Unwatched), ]</value>
    <value condition="!Integer.IsGreater(Window(Home).Property(Episodes.Unwatched),0) + Library.HasContent(tvshows) + Container(300).HasFocus(5)">$LOCALIZE[20343]$INFO[Window(Home).Property(TVShows.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[20360]$INFO[Window(Home).Property(Episodes.Count), ,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Library.HasContent(music) + Container(300).HasFocus(6)">$LOCALIZE[134]$INFO[Window(Home).Property(Music.SongsCount), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[132]$INFO[Window(Home).Property(Music.AlbumsCount), ]</value>
  </variable>

  <variable name="GlobalHeadings" description="Global Headings">
    <value condition="Skin.hassetting(plexbmc) + !Window.IsActive(Home) + !String.IsEmpty(Window.Property(heading))">$INFO[Window.Property(heading),,[COLOR=Highlight]  •  [/COLOR]]$INFO[Window.Property(heading2),,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems]</value>
    <value condition="Window.IsActive(Settings.xml) | Window.IsActive(SettingsCategory.xml)">$LOCALIZE[5] / $LOCALIZE[31022]</value>
    <value condition="Window.IsActive(SkinSettings.xml)">$LOCALIZE[5] / Amber</value>
    <value condition="Window.IsActive(AddonBrowser.xml) + String.IsEmpty(Container.FolderName)">$LOCALIZE[31291]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(episodes)">$INFO[Container.ShowTitle]$INFO[Container.FolderName,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Window.IsActive(MyVideoPlaylist.xml)">$LOCALIZE[20012]</value>
    <value condition="Window.IsActive(MyMusicPlaylist.xml)">$LOCALIZE[20011]</value>
    <value condition="Window.IsActive(DialogVideoInfo.xml)">$LOCALIZE[20159]</value>
    <value condition="Window.IsActive(DialogFavourites.xml)">$LOCALIZE[1036]</value>
    <value condition="Container.content(movies) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20342][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
    <value condition="Container.content(tvshows) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20343][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
    <value condition="Container.content(musicvideos) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20389][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>

    <value condition="Window.IsActive(TVChannels)">$LOCALIZE[19020] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
    <value condition="Window.IsActive(RadioChannels)">$LOCALIZE[19021] / $LOCALIZE[19019] / $INFO[Control.GetLabel(29)]</value>
    <value condition="Window.IsActive(TVGuide)">$LOCALIZE[19020] / $LOCALIZE[19069] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
    <value condition="Window.IsActive(RadioGuide)">$LOCALIZE[19021] / $LOCALIZE[19069] / $INFO[Control.GetLabel(29)] - $INFO[Control.GetLabel(30)]</value>
    <value condition="Window.IsActive(TVRecordings)">$LOCALIZE[19020] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
    <value condition="Window.IsActive(RadioRecordings)">$LOCALIZE[19021] / $LOCALIZE[19017]$INFO[Control.GetLabel(30), / ]</value>
    <value condition="Window.IsActive(TVTimers)">$LOCALIZE[19020] / $LOCALIZE[19040]</value>
    <value condition="Window.IsActive(RadioTimers)">$LOCALIZE[19021] / $LOCALIZE[19040]</value>
    <value condition="Window.IsActive(TVTimerRules)">$LOCALIZE[19020] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
    <value condition="Window.IsActive(RadioTimerRules)">$LOCALIZE[19021] / $LOCALIZE[19138]$INFO[Control.GetLabel(29), / ]</value>
    <value condition="Window.IsActive(TVSearch)">$LOCALIZE[19020] / $LOCALIZE[137]</value>
    <value condition="Window.IsActive(RadioSearch)">$LOCALIZE[19021] / $LOCALIZE[137]</value>

     <value condition="!String.IsEmpty(Container.FolderName)">$INFO[Container.FolderName,,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems]</value>
</variable>

  <variable name="CurrentBackgroundSetting">
    <value condition="!String.IsEmpty(Container(9004).ListItem.Thumb)">$INFO[Container(9104).ListItem.Thumb]</value>
    <value>$LOCALIZE[571]</value>
  </variable>

  <variable name="QuitLabel2" description="Label2 for skin settings Quit function item">
    <value condition="String.IsEqual(Skin.String(shutdown),quit)">$LOCALIZE[13009]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),powerdown)">$LOCALIZE[13005]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),hibernate)">$LOCALIZE[13010]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),suspend)">$LOCALIZE[13011]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),reboot)">$LOCALIZE[13013]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),logoff) + System.HasLoginScreen">$LOCALIZE[20126]</value>
  </variable>

  <variable name="QuitAction" description="Action for Quit function item">
    <value condition="String.IsEqual(Skin.String(shutdown),quit)">quit()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),powerdown)">powerdown()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),hibernate)">hibernate()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),suspend)">suspend()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),reboot)">reboot()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),logoff) + System.HasLoginScreen">System.logoff</value>
    <value>ActivateWindow(shutdownmenu)</value>
  </variable>

  <variable name="MovieEntryPoint" description="Action for Movie home button">
    <value condition="Skin.HasSetting(MovieEntry.RecentlyAdded)">ActivateWindow(Videos,RecentlyAddedMovies,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Playlists)">ActivateWindow(Videos,Playlists,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Genres)">ActivateWindow(Videos,MovieGenres,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Files)">ActivateWindow(Videos,Files,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Library)">ActivateWindow(Videos,Movies,return)</value>
    <value>ActivateWindow(Videos,MovieTitles,return)</value>
  </variable>

  <variable name="MovieEntryPointLabel2" description="Label2 for skin settings Movies function item">
    <value condition="Skin.HasSetting(MovieEntry.RecentlyAdded)">$LOCALIZE[20386]</value>
    <value condition="Skin.HasSetting(MovieEntry.Playlists)">$LOCALIZE[136]</value>
    <value condition="Skin.HasSetting(MovieEntry.Genres)">$LOCALIZE[135]</value>
    <value condition="Skin.HasSetting(MovieEntry.Files)">$LOCALIZE[744]</value>
    <value condition="Skin.HasSetting(MovieEntry.Library)">$LOCALIZE[15100]</value>
  </variable>

  <variable name="TVShowEntryPoint" description="Action for TV Show home button">
    <value condition="Skin.HasSetting(TVShowEntry.RecentlyAdded)">ActivateWindow(Videos,RecentlyAddedEpisodes,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Playlists)">ActivateWindow(Videos,Playlists,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Genres)">ActivateWindow(Videos,TvShowGenres,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Files)">ActivateWindow(Videos,Files,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Library)">ActivateWindow(Videos,TvShows,return)</value>
    <value>ActivateWindow(Videos,TvShowTitles,return)</value>
  </variable>

  <variable name="TVShowEntryPointLabel2" description="Label2 for skin settings TV Show function item">
    <value condition="Skin.HasSetting(TVShowEntry.RecentlyAdded)">$LOCALIZE[20387]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Playlists)">$LOCALIZE[136]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Genres)">$LOCALIZE[135]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Files)">$LOCALIZE[744]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Library)">$LOCALIZE[15100]</value>
  </variable>

  <variable name="MusicEntryPoint" description="Action for Movie home button">
    <value condition="Skin.HasSetting(MusicEntry.RecentlyAdded)">ActivateWindow(Music,RecentlyAddedAlbums,return)</value>
    <value condition="Skin.HasSetting(MusicEntry.Playlists)">ActivateWindow(Music,Playlists,return)</value>
    <value condition="Skin.HasSetting(MusicEntry.Files)">ActivateWindow(Music,Files,return)</value>
    <value condition="Skin.HasSetting(MusicEntry.Albums)">ActivateWindow(Music,Albums,return)</value>
    <value condition="Skin.HasSetting(MusicEntry.Genres)">ActivateWindow(Music,Genres,return)</value>
    <value>ActivateWindow(Music,Artists,return)</value>
  </variable>

  <variable name="MusicEntryPointLabel2" description="Label2 for skin settings Music function item">
    <value condition="Skin.HasSetting(MusicEntry.RecentlyAdded)">$LOCALIZE[359]</value>
    <value condition="Skin.HasSetting(MusicEntry.Playlists)">$LOCALIZE[136]</value>
    <value condition="Skin.HasSetting(MusicEntry.Files)">$LOCALIZE[744]</value>
    <value condition="Skin.HasSetting(MusicEntry.Albums)">$LOCALIZE[132]</value>
    <value condition="Skin.HasSetting(MusicEntry.Genres)">$LOCALIZE[135]</value>
  </variable>

  <variable name="TVEntryPoint" description="Action for TV home button">
    <value condition="Skin.HasSetting(TVEntry.Guide)">ActivateWindow(TVGuide)</value>
    <value condition="Skin.HasSetting(TVEntry.Recordings)">ActivateWindow(TVRecordings)</value>
    <value>ActivateWindow(TVChannels)</value>
  </variable>

  <variable name="TVEntryPointLabel2" description="Label2 for skin settings TV function item">
    <value condition="Skin.HasSetting(TVEntry.Guide)">$LOCALIZE[22020]</value>
    <value condition="Skin.HasSetting(TVEntry.Recordings)">$LOCALIZE[19163]</value>
  </variable>

  <variable name="RadioEntryPoint" description="Action for Radio home button">
    <value condition="Skin.HasSetting(RadioEntry.Guide)">ActivateWindow(RadioGuide)</value>
    <value condition="Skin.HasSetting(RadioEntry.Recordings)">ActivateWindow(RadioRecordings)</value>
    <value>ActivateWindow(RadioChannels)</value>
  </variable>

  <variable name="RadioEntryPointLabel2" description="Label2 for skin settings Radio function item">
    <value condition="Skin.HasSetting(RadioEntry.Guide)">$LOCALIZE[22020]</value>
    <value condition="Skin.HasSetting(RadioEntry.Recordings)">$LOCALIZE[19163]</value>
  </variable>

  <variable name="SettingsLocationPointLabel2" description="Label2 for skin settings location item">
    <value condition="Skin.HasSetting(SettingsLocation.Home)">$LOCALIZE[31032]</value>
    <value condition="Skin.HasSetting(SettingsLocation.Quit)">$LOCALIZE[31033]</value>
  </variable>

  <variable name="MusicPlayingFanartLabel2" description="Label2 for music playing FA">
    <value condition="Skin.HasSetting(MusicPlayingFanart)">$LOCALIZE[449]</value>
    <value>$LOCALIZE[13113]</value>
  </variable>

  <variable name="MusicRepeat" description="Image to display in MusicOSD">
    <value condition="Playlist.IsRepeatOne">OSD/OSDRepeatOneNF.png</value>
    <value condition="Playlist.IsRepeat">OSD/OSDRepeatAllNF.png</value>
    <value condition="![Playlist.IsRepeatOne | Playlist.IsRepeat]">OSD/OSDRepeatNF.png</value>
  </variable>

  <variable name="PVROverlay" description="PVR Overlay image">
    <value condition="ListItem.IsRecording">img/PVR-IsRecording.png</value>
    <value condition="ListItem.HasTimer">img/PVR-HasTimer.png</value>
  </variable>

  <variable name="ListItem.ratingbadge">
    <value condition="!String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating,badges/ratings/rating,.png]</value>
    <value condition="String.IsEmpty(ListItem.UserRating) + !String.IsEmpty(ListItem.dbtype)">badges/ratings/ratingNR.png</value>
  </variable>
  
  <variable name="VideoPlayer.ratingbadge">
    <value condition="!String.IsEmpty(VideoPlayer.UserRating)">$INFO[VideoPlayer.UserRating,badges/ratings/rating,.png]</value>
  </variable>

  <variable name="VideoHWDecoder">
    <value condition="Player.Process(videohwdecoder)">HW</value>
    <value>SW</value>
  </variable>

  <variable name="Details" description="Shown Above Plots and descriptions">
    <value condition="Container.Content(images)">$INFO[ListItem.Date,, • ]$INFO[ListItem.Size]</value>
    <value condition="Container.content(Albums)">$INFO[ListItem.Artist]</value>
    <value condition="Container.Content(Episodes)">$INFO[ListItem.Premiered,,  • ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Rating,  • ]</value>
    <value condition="Container.Content(Addons)">$INFO[ListItem.AddonCreator,$LOCALIZE[21863] : ]</value>
    <value condition="Container.Content(songs) + !String.IsEmpty(ListItem.Album)">[COLOR=Grey]$LOCALIZE[558]:[/COLOR] $INFO[ListItem.Album]</value>
    <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_genre))">$INFO[ListItem.Property(artist_genre),[COLOR=Grey]$LOCALIZE[515]: [/COLOR]]</value>
    <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_style))">$INFO[ListItem.Property(artist_style),[COLOR=Grey]$LOCALIZE[176]: [/COLOR]]</value>
    <value condition="Container.Content(MusicVideos)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31297]]</value>
    <value condition="Container.Content(Movies)">$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[31297]]$INFO[ListItem.Rating, • ]$INFO[ListItem.MPAA, • ]</value>
		<value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ] [COLOR=Highlight]$INFO[ListItem.Property(UnWatchedEpisodes), (,) ][/COLOR]</value>
    <value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ]</value>
    <value>$INFO[ListItem.Label2]</value>
  </variable>

  <variable name="panelheading">
    <value condition="ListItem.IsParentFolder">..</value>
    <value condition="String.IsEqual(ListItem.DBType,set)">[B]$INFO[Listitem.Title,, ][/B]$INFO[Window(Home).Property(SkinHelper.MovieSet.Year),(,)]</value>
    <value condition="String.IsEqual(ListItem.DBType,movie)">[B]$INFO[Listitem.Title,, ][/B]$INFO[ListItem.Year,(,)]</value>
    <value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
    <value condition="Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRTimers.xml)">$INFO[Listitem.Title]</value>
    <value condition="Window.IsActive(MyPVRRecordings.xml) + ListItem.IsFolder + Integer.IsGreater(Container(80).NumItems,0)">$INFO[ListItem.label] $INFO[Container(80).NumItems,[B](,)[/B]]</value>
    <value>$INFO[Listitem.label]</value>
  </variable>

  <variable name="panelsubheading">
    <value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.Rating,[COLOR=Highlight] • [/COLOR]]$INFO[ListItem.MPAA,[COLOR=Highlight] • [/COLOR]]</value>
    <value condition="String.IsEqual(ListItem.DBType,set)">$INFO[Window(Home).Property(SkinHelper.MovieSet.Count),$LOCALIZE[20161]: ]$INFO[Window(Home).Property(SkinHelper.MovieSet.UnWatchedCount),[COLOR=Highlight] • [/COLOR]$LOCALIZE[16101]: ,]$INFO[ListItem.MPAA,[COLOR=Highlight] • [/COLOR]]</value>
    <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] ] [COLOR=Highlight]$INFO[ListItem.Property(UnWatchedEpisodes), (,) ][/COLOR]</value>
    <value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
    <value condition="Container.Content(Episodes)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.Premiered , • ]$VAR[episoderating]$INFO[ListItem.MPAA, • ]</value>
    <value condition="Container.Content(albums)">$INFO[Listitem.AlbumArtist]</value>
    <value condition="Container.Content(songs)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Duration]</value>
    <value condition="Container.Content(artists)">$INFO[Listitem.Property(Artist_Born),[COLOR=orange]$LOCALIZE[21893]: [/COLOR]]$INFO[Listitem.Property(Artist_Formed),[COLOR=orange]$LOCALIZE[21894]: [/COLOR]]</value>
    <value condition="Container.Content(images) + !ListItem.IsFolder">$INFO[Listitem.Size]$INFO[ListItem.PictureDateTime, • ,]</value>
    <value condition="Window.IsActive(MyPVRChannels.xml)">[COLOR=Grey]$LOCALIZE[142] [/COLOR]$INFO[ListItem.StartTime,, / ]$INFO[ListItem.EndTime] </value>
    <value condition="Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml)">$INFO[ListItem.Date] $INFO[ListItem.ChannelName,  •  ]</value>
    <value condition="Window.IsActive(MyPVRRecordings.xml)">$INFO[ListItem.Duration,[COLOR=Grey]$LOCALIZE[2050]: [/COLOR]]</value>
    <value>$INFO[Listitem.Title]</value>
  </variable>

  <variable name="Plots" description="Plots and descriptions">
    <value condition="Container.content(addons) + !String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>

    <value condition="String.IsEqual(ListItem.DBType,set)">$INFO[Window(Home).Property(SkinHelper.MovieSet.Title)]</value>

    <value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(Container.ShowPlot)">$INFO[Container.ShowPlot]</value>

    <value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
    <value condition="String.IsEqual(ListItem.DBType,album) + String.IsEmpty(ListItem.Property(Album_Description))">$LOCALIZE[414]</value>
    <value condition="String.IsEqual(ListItem.DBType,artist) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
    <value condition="String.IsEqual(ListItem.DBType,artist) + String.IsEmpty(ListItem.Property(Artist_Description))">$LOCALIZE[547]</value>

    <value condition="Container.Content(images) + !String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
    <value condition="Container.Content(images) + !String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
    <value condition="Container.Content(images) + !String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
    <value condition="Container.Content(images)">[COLOR=Grey]$LOCALIZE[21821]:[/COLOR][CR]   $LOCALIZE[416]</value>
    <value condition="Container.Content(images)">[COLOR=Grey]$LOCALIZE[21821]:[/COLOR][CR]   $LOCALIZE[416]</value>

    <value condition="Window.IsActive(MyPVRTimers.xml)">$INFO[ListItem.Comment][CR]$INFO[ListItem.Date]</value>

    <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
    <value condition="!String.IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
  </variable>

  <variable name="panelfooter">
    <value condition="Container.Content(Movies)">$INFO[Listitem.Genre,[COLOR=orange]$LOCALIZE[515]: [/COLOR]]</value>
    <value condition="Container.Content(TVShows)">$INFO[Listitem.Season,[COLOR=orange]$LOCALIZE[33054]:[/COLOR] ][CAPITALIZE]$INFO[Listitem.Episode, • [COLOR=orange]$LOCALIZE[36907]:[/COLOR] ][/CAPITALIZE][CR]$INFO[Listitem.Genre,[COLOR=orange]$LOCALIZE[515]: [/COLOR]]</value>
    <value condition="Container.Content(Seasons)">$INFO[Listitem.Genre,[COLOR=orange]$LOCALIZE[515]: [/COLOR]][CR][CAPITALIZE]$INFO[Listitem.Episode,[COLOR=orange]$LOCALIZE[36907]:[/COLOR] ][/CAPITALIZE]</value>
    <value condition="Container.Content(Episodes)">$INFO[Listitem.Genre,[COLOR=orange]$LOCALIZE[515]: [/COLOR]][CR]$INFO[Listitem.Season,[COLOR=orange]$LOCALIZE[20373]:[/COLOR] ]$INFO[Listitem.Episode, • [COLOR=orange][CAPITALIZE]$LOCALIZE[20452][/CAPITALIZE]:[/COLOR] ]</value>
    <value condition="Container.Content(Albums)">$INFO[Listitem.Genre,[COLOR=orange]$LOCALIZE[515]: [/COLOR]][CR]$INFO[Listitem.Year,[COLOR=orange]$LOCALIZE[562]:[/COLOR] ]$INFO[Listitem.Property(Album_Label), • [COLOR=orange]$LOCALIZE[21899]:[/COLOR] ]</value>
    <value condition="Container.Content(Artists)">$INFO[Listitem.Property(Artist_Genre),[COLOR=orange]$LOCALIZE[515]: [/COLOR]][CR]$INFO[Listitem.Property(Artist_YearsActive),[COLOR=orange]$LOCALIZE[21898]:[/COLOR] ]</value>
    <value condition="Window.IsActive(MyPVRChannels.xml)">[COLOR=Grey]$LOCALIZE[19031]: [/COLOR]$INFO[ListItem.NextTitle]</value>
    <value condition="Window.IsActive(MyPVRTimers.xml)">$INFO[PVR.NextTimer]</value>
  </variable>

  <variable name="episoderating">
    <value condition="Skin.HasSetting(EpisodeRating.Hide)"></value>
    <value condition="!Skin.HasSetting(EpisodeRating.Hide)">$INFO[ListItem.Rating, • ]</value>
  </variable>

  <variable name="TVShows.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(TVShows.Background))">$INFO[Skin.String(TVShows.Background)]</value>
    <value>special://skin/backgrounds/TVShows.jpg</value>
  </variable>
  <variable name="Movies.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Movies.Background))">$INFO[Skin.String(Movies.Background)]</value>
    <value>special://skin/backgrounds/Movies.jpg</value>
  </variable>
  <variable name="MusicVideos.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(MusicVideos.Background))">$INFO[Skin.String(MusicVideos.Background)]</value>
    <value>special://skin/backgrounds/MusicVideos.jpg</value>
  </variable>
  <variable name="Videos.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Videos.Background))">$INFO[Skin.String(Videos.Background)]</value>
    <value>special://skin/backgrounds/Videos.jpg</value>
  </variable>
  <variable name="Music.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Music.Background))">$INFO[Skin.String(Music.Background)]</value>
    <value>special://skin/backgrounds/Music.jpg</value>
  </variable>
  <variable name="Pictures.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Pictures.Background))">$INFO[Skin.String(Pictures.Background)]</value>
    <value>special://skin/backgrounds/Pictures.jpg</value>
  </variable>
  <variable name="Weather.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Weather.Background))">$INFO[Skin.String(Weather.Background)]</value>
    <value>special://skin/backgrounds/Weather.jpg</value>
  </variable>
  <variable name="Favourites.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Favourites.Background))">$INFO[Skin.String(Favourites.Background)]</value>
    <value>special://skin/backgrounds/Favourites.jpg</value>
  </variable>
  <variable name="Addons.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Addons.Background))">$INFO[Skin.String(Addons.Background)]</value>
    <value>special://skin/backgrounds/Addons.jpg</value>
  </variable>
  <variable name="Settings.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Settings.Background))">$INFO[Skin.String(Settings.Background)]</value>
    <value>special://skin/backgrounds/Settings.jpg</value>
  </variable>
  <variable name="Pvr.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Pvr.Background))">$INFO[Skin.String(Pvr.Background)]</value>
    <value>special://skin/backgrounds/Pvr.jpg</value>
  </variable>
  <variable name="Radio.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Radio.Background))">$INFO[Skin.String(Radio.Background)]</value>
    <value>special://skin/backgrounds/Radio.jpg</value>
  </variable>
  <variable name="DVD.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(DVD.Background))">$INFO[Skin.String(DVD.Background)]</value>
    <value>special://skin/backgrounds/DVD.jpg</value>
  </variable>
  <variable name="Quit.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Quit.Background))">$INFO[Skin.String(Quit.Background)]</value>
    <value>special://skin/backgrounds/Quit.jpg</value>
  </variable>

  <variable name="Fanart.Art">
    <value condition="Window.IsActive(pictures) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="Window.IsActive(pictures) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
    <value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
    <value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
    <value condition="!String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="!String.IsEmpty(ListItem.Property(FanArt))">$INFO[ListItem.Property(FanArt)]</value>
    <value>$VAR[SubDefaultBackground]</value>
  </variable>

  <variable name="SubBackground">
    <value condition="!Skin.HasSetting(Sub_FanArtBG)">$VAR[SubDefaultBackground]</value>
    <value>$VAR[Fanart.Art]</value>
  </variable>

  <variable name="SubDefaultBackground">
    <value condition="Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(Default.Background))">$INFO[Skin.String(Default.Background)]</value>
    <value condition="Skin.HasSetting(Sub_DefaultBG)">special://skin/backgrounds/default/</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + [Container.Content(TvShows) | Container.Content(Seasons) | Container.Content(Episodes)]">$VAR[TVShows.Art]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(Movies)">$VAR[Movies.Art]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(MusicVideos)">$VAR[MusicVideos.Art]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) | Window.IsActive(videoplaylist)">$VAR[Videos.Art]</value>
    <value condition="Window.IsActive(MyMusicNav.xml) | Window.IsActive(musicplaylist)">$VAR[Music.Art]</value>
    <value condition="Window.IsActive(videoplaylist)">$LOCALIZE[10522]</value>
    <value condition="Window.IsActive(musicplaylist)">$LOCALIZE[10517]</value>
    <value condition="Window.IsActive(MyPics.xml)">$VAR[Pictures.Art]</value>
    <value condition="Window.IsActive(DialogFavourites.xml)">$VAR[Favourites.Art]</value>
    <value condition="Window.IsActive(MyWeather.xml)">$VAR[Weather.Art]</value>
    <value condition="Window.IsActive(MyPrograms.xml) | Window.IsActive(AddonBrowser.xml) | Window.IsActive(CustomAddons.xml)">$VAR[Addons.Art]</value>
    <value condition="Window.IsActive(Settings.xml) | Window.IsActive(SettingsCategory.xml) | Windows.IsActive(SettingsProfile.xml) | Window.IsActive(SettingsScreenCalibration.xml) | Window.IsActive(SettingsSystemInfo.xml) | Window.IsActive(EventLog.xml)">$VAR[Settings.Art]</value>
    <value condition="[Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyPVRTimers.xml)] + String.IsEmpty(Window.Property(IsRadio))">$VAR[Pvr.Art]</value>
    <value condition="[Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyPVRTimers.xml)] + !String.IsEmpty(Window.Property(IsRadio))">$VAR[Radio.Art]</value>
    <value>special://skin/backgrounds/default/</value>
  </variable>

  <variable name="HomeBackground">
    <value condition="Control.HasFocus(2001) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(2001).ListItem.Art(fanart))">$INFO[Container(2001).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(2002) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(2002).ListItem.Art(fanart))">$INFO[Container(2002).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(2003) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(2003).ListItem.Art(fanart))">$INFO[Container(2003).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(2004) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(2004).ListItem.Art(fanart))">$INFO[Container(2004).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(2005) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(2005).ListItem.Art(fanart))">$INFO[Container(2005).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(4001) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(4001).ListItem.Art(fanart))">$INFO[Container(4001).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(4002) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(4002).ListItem.Art(fanart))">$INFO[Container(4002).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(4003) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(4003).ListItem.Art(fanart))">$INFO[Container(4003).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(4004) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(4004).ListItem.Art(fanart))">$INFO[Container(4004).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(4005) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(4005).ListItem.Art(fanart))">$INFO[Container(4005).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(5001) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(5001).ListItem.Art(fanart))">$INFO[Container(5001).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(5002) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(5002).ListItem.Art(fanart))">$INFO[Container(5002).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(5003) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(5003).ListItem.Art(fanart))">$INFO[Container(5003).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(5004) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(5004).ListItem.Art(fanart))">$INFO[Container(5004).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(5005) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(5005).ListItem.Art(fanart))">$INFO[Container(5005).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(6001) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(6001).ListItem.Art(fanart))">$INFO[Container(6001).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(6002) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(6002).ListItem.Art(fanart))">$INFO[Container(6002).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(6003) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(6003).ListItem.Art(fanart))">$INFO[Container(6003).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(6004) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(6004).ListItem.Art(fanart))">$INFO[Container(6004).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(6005) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(6005).ListItem.Art(fanart))">$INFO[Container(6005).ListItem.Art(fanart)]</value>
    <value condition="Control.HasFocus(12002) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(12002).ListItem.Art(fanart))">$INFO[Container(12002).ListItem.Art(fanart)]</value>
    <value condition="Skin.HasSetting(Home_DefaultBG) + !String.IsEmpty(Skin.String(Default.Background))">$INFO[Skin.String(Default.Background)]</value>
    <value condition="Skin.HasSetting(Home_DefaultBG)">special://skin/backgrounds/default/</value>
    <value>$INFO[Container(300).ListItem.Icon]</value>
  </variable>

  <variable name="SeekLabel">
    <value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize,[COLOR=Highlight]$LOCALIZE[773]:[/COLOR] ]</value>
    <value condition="Player.Caching">$INFO[Player.CacheLevel,$LOCALIZE[15107] ,%]</value>
    <value condition="Player.Paused">$LOCALIZE[112]</value>
    <value condition="Player.Forwarding">[COLOR=Highlight]$VAR[ForwardRewindLabel][/COLOR] $LOCALIZE[31353]</value>
    <value condition="Player.Rewinding">[COLOR=Highlight]$VAR[ForwardRewindLabel][/COLOR] $LOCALIZE[31354]</value>
    <value condition="Player.IsTempo">$LOCALIZE[31142]: $INFO[Player.PlaySpeed]</value>
  </variable>

  <variable name="ForwardRewindLabel">
    <value condition="Player.Forwarding2x | Player.Rewinding2x">2 X</value>
    <value condition="Player.Forwarding4x | Player.Rewinding4x">4 X</value>
    <value condition="Player.Forwarding8x | Player.Rewinding8x">8 X</value>
    <value condition="Player.Forwarding16x | Player.Rewinding16x">16 X</value>
    <value condition="Player.Forwarding32x | Player.Rewinding32x">32 X</value>
  </variable>

  <variable name="DialogBusyLabel">
    <value condition="Integer.IsGreater(Control.GetLabel(10), 0)">$LOCALIZE[31979]$INFO[Control.GetLabel(10), ,%]</value>
    <value>$LOCALIZE[31979]</value>
  </variable>

  <variable name="GlobalSearchFanArt">
    <value condition="Control.HasFocus(111)">$INFO[Container(111).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(121)">$INFO[Container(121).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(131)">$INFO[Container(131).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(141)">$INFO[Container(141).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(151)">$INFO[Container(151).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(161)">$INFO[Container(161).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(171)">$INFO[Container(171).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(181)">$INFO[Container(181).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(211)">$INFO[Container(211).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(221)">$INFO[Container(221).ListItem.Property(Fanart)]</value>
    <value condition="Control.HasFocus(231)">$INFO[Container(231).ListItem.Property(Fanart)]</value>
  </variable>

  <variable name="GlobalSearchPlots">
    <value condition="![Control.IsVisible(130) | Control.IsVisible(160) | Control.IsVisible(170) | Control.IsVisible(180)] + !String.IsEmpty(Container(100).ListItem.Property(Plot))">$INFO[Container(100).ListItem.Property(Plot)]</value>
    <value condition="![Control.IsVisible(130) | Control.IsVisible(160) | Control.IsVisible(170) | Control.IsVisible(180)] + !String.IsEmpty(Container(100).ListItem.Property(PlotOutline))">$INFO[Container(100).ListItem.Property(PlotOutline)]</value>
    <value condition="Control.IsVisible(160)">$INFO[Container(100).ListItem.Property(Artist_Description)]</value>
    <value condition="Control.IsVisible(170)">$INFO[Container(100).ListItem.Property(Album_Description)]</value>
    <value condition="Control.IsVisible(180)">$INFO[Container(100).ListItem.Property(Comment)]</value>
  </variable>

  <variable name="NextUpCountdown">
    <value condition="Integer.IsGreaterOrEqual(Player.TimeRemaining(ss),10)">$INFO[Player.TimeRemaining(ss),Starting in ,s...]</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),09)">Starting in 9s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),08)">Starting in 8s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),07)">Starting in 7s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),06)">Starting in 6s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),05)">Starting in 5s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),04)">Starting in 4s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),03)">Starting in 3s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),02)">Starting in 2s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),01)">Starting in 1s...</value>
    <value condition="String.IsEqual(Player.TimeRemaining(ss),00)">Starting now</value>
  </variable>

  <expression name="SettingsAddon1to5Visibility">!String.IsEmpty(Skin.String(ShelfAddons.1.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.2.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.3.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.4.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.5.Label))</expression>
  
  <expression name="56_FanartViewInfo">[[container.content(albums) | container.content(artists)] + Skin.HasSetting(56_Music_Info)] | [container.content(episodes) + Skin.HasSetting(56_Episodes_Info)] | [[container.content(MusicVideos) | container.content(movies) | container.content(tvshows) | container.content(seasons)] + Skin.HasSetting(56_Posters_Info)]</expression>

  <expression name="56_FanartViewGallery">[[container.content(albums) | container.content(artists)] + Skin.HasSetting(56_Music_Gallery)] | [container.content(episodes) + Skin.HasSetting(56_Episodes_Gallery)] | [[container.content(MusicVideos) | container.content(movies) | container.content(tvshows) | container.content(seasons)] + Skin.HasSetting(56_Posters_Gallery)]</expression>
</includes>
