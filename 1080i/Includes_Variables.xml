<?xml version="1.0" encoding="UTF-8"?>
<includes>
  
  <variable name="Time" description="Date and time">
    <value condition="Window.IsActive(home) | Window.IsActive(weather)">[COLOR=Grey2]$INFO[System.Date][/COLOR][COLOR=Highlight]  •  [/COLOR]$INFO[System.Time]</value>
    <value>$INFO[System.Time]</value>
  </variable>

  <variable name="ChapterLabel" description="Chapter label in DialogSeekBar">
    <value condition="Player.ChapterCount + !String.IsEmpty(Player.ChapterName)">$INFO[Player.ChapterName][COLOR=Highlight] • [/COLOR]$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ]</value>
    <value condition="Player.ChapterCount">$LOCALIZE[21396][COLOR=Highlight] • [/COLOR]$INFO[Player.Chapter]$INFO[Player.ChapterCount, / ]</value>
  </variable>

  <variable name="PlaylistHeader" description="Header for MyPlaylist window">
    <value condition="Window.IsActive(videoplaylist)">$LOCALIZE[10522]</value>
    <value condition="Window.IsActive(musicplaylist)">$LOCALIZE[10517]</value>
  </variable>

  <variable name="MusicInfoHeader" description="Header for MusicInfo window">
    <value condition="Container.Content(Artists)">$LOCALIZE[21891]: [COLOR=White]$INFO[ListItem.Artist][/COLOR]</value>
    <value condition="Container.Content(Albums)">$LOCALIZE[10523]: [COLOR=White]$INFO[ListItem.Album][/COLOR]</value>
    <value condition="Container.Content(Songs)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
  </variable>

  <variable name="PVRChannelManagerHeader" description="Header for PVRChannelManager window">
    <value condition="String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19023]</value>
    <value>$LOCALIZE[19199] - $LOCALIZE[19024]</value>
  </variable>

  <variable name="MasterModeLabel">
    <value condition="System.IsMaster">$LOCALIZE[12332]</value>
    <value>$LOCALIZE[12333]</value>
  </variable>

  <variable name="PVRLargeIcon">
    <value condition="ListItem.IsFolder">$INFO[Container(80).ListItem.Icon]</value>
    <value>$INFO[ListItem.Icon]</value>
  </variable>

  <variable name="MediaListLabel">
    <value>$INFO[ListItem.Label]</value>
  </variable>

  <variable name="MediaListLabel2">
    <value condition="Container.Content(albums) | Container.Content(songs)">$INFO[ListItem.artist]</value>
    <value></value>
  </variable>

  <variable name="Overlay" description="Overlay image">
    <value condition="Skin.HasSetting(plexbmc) + ListItem.property(IsResumable)">$INFO[ListItem.Overlay]</value>
    <value condition="Skin.HasSetting(plexbmc) + ListItem.property(overlay)">$INFO[ListItem.property(overlay)]</value>
    <value condition="!Skin.HasSetting(Hide_InProgress_Marks) + !String.IsEmpty(ListItem.Overlay) + ListItem.IsResumable">OverlayInProgress.png</value>
    <value condition="Skin.HasSetting(Hide_InProgress_Marks) + !String.IsEmpty(ListItem.Overlay) + ListItem.IsResumable">-</value>
    <value condition="!Skin.HasSetting(Hide_Watched_Marks) + !String.IsEmpty(ListItem.Overlay) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)">$INFO[ListItem.Overlay]</value>
    <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + !String.IsEmpty(ListItem.Overlay) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + [Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)]">OverlayUnwatched.png</value>
    <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + !String.IsEmpty(ListItem.Overlay) + String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)">$INFO[ListItem.Overlay]</value>
    <value condition="!Skin.HasSetting(Hide_InProgress_Marks) + ListItem.Property(Widgets) + ListItem.Property(InProgress)">OverlayInProgress.png</value>
    <value condition="Skin.HasSetting(Hide_InProgress_Marks) + ListItem.Property(Widgets) + ListItem.Property(InProgress)">-</value>
    <value condition="!Skin.HasSetting(Hide_Watched_Marks) + ListItem.Property(Widgets) + ListItem.Property(Watched)">OverlayWatched.png</value>
    <value condition="!Skin.HasSetting(Hide_Unwatched_Marks) + ListItem.Property(Widgets) + !ListItem.Property(Watched)">OverlayUnwatched.png</value>
    <value>-</value>
  </variable>
  
  <variable name="PVRRecordingsTitle">
    <value condition="ListItem.IsFolder + Integer.IsGreater(Container(80).NumItems,0)">$INFO[ListItem.label] $INFO[Container(80).NumItems,[B](,)[/B]]</value>
    <value>$INFO[ListItem.label]</value>
  </variable>

  <variable name="Banner" description="TV Banners">
    <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
    <value condition="Skin.HasSetting(plexbmc)">$INFO[ListItem.Property(banner)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
    <value>DefaultBanner.png</value>
  </variable>

  <variable name="Poster" description="Poster">
    <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
    <value>$INFO[ListItem.Icon]</value>
  </variable>  

  <variable name="Thumbs" description="Poster">
    <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
    <value>$INFO[ListItem.Icon]</value>
  </variable>

  <variable name="LibraryStats" description="Home page library statistics">
    <value condition="Integer.IsGreater(Window(Home).Property(MusicVideos.Unwatched),0) + Library.HasContent(musicvideos) + Container(300).HasFocus(14)">$LOCALIZE[20389]$INFO[Window(Home).Property(MusicVideos.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[16101]$INFO[Window(Home).Property(MusicVideos.Unwatched), ]</value>
    <value condition="!Integer.IsGreater(Window(Home).Property(MusicVideos.Unwatched),0) + Library.HasContent(musicvideos) + Container(300).HasFocus(14)">$LOCALIZE[20389]$INFO[Window(Home).Property(MusicVideos.Count), ,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Integer.IsGreater(Window(Home).Property(Movies.Unwatched),0) + Library.HasContent(movies) + Container(300).HasFocus(4)">$LOCALIZE[20342]$INFO[Window(Home).Property(Movies.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[16101]$INFO[Window(Home).Property(Movies.Unwatched), ]</value>
    <value condition="!Integer.IsGreater(Window(Home).Property(Movies.Unwatched),0) + Library.HasContent(movies) + Container(300).HasFocus(4)">$LOCALIZE[20342]$INFO[Window(Home).Property(Movies.Count), ,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Integer.IsGreater(Window(Home).Property(Episodes.Unwatched),0) + Library.HasContent(tvshows) + Container(300).HasFocus(5)">$LOCALIZE[20360]$INFO[Window(Home).Property(Episodes.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[16101]$INFO[Window(Home).Property(Episodes.Unwatched), ]</value>
    <value condition="!Integer.IsGreater(Window(Home).Property(Episodes.Unwatched),0) + Library.HasContent(tvshows) + Container(300).HasFocus(5)">$LOCALIZE[20343]$INFO[Window(Home).Property(TVShows.Count), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[20360]$INFO[Window(Home).Property(Episodes.Count), ,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Library.HasContent(music) + Container(300).HasFocus(6)">$LOCALIZE[134]$INFO[Window(Home).Property(Music.SongsCount), ,[COLOR=Highlight]  •  [/COLOR]]$LOCALIZE[132]$INFO[Window(Home).Property(Music.AlbumsCount), ]</value>
  </variable>

  <variable name="GlobalHeadings" description="Global Headings">
    <value condition="Skin.hassetting(plexbmc) + !Window.IsActive(Home) + !String.IsEmpty(Window.Property(heading))">$INFO[Window.Property(heading),,[COLOR=Highlight]  •  [/COLOR]]$INFO[Window.Property(heading2),,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems]</value>
    <value condition="Window.IsActive(Settings.xml) | Window.IsActive(SettingsCategory.xml)">$LOCALIZE[5]</value>
    <value condition="Window.IsActive(AddonBrowser.xml) + String.IsEmpty(Container.FolderName)">$LOCALIZE[31291]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(episodes)">$INFO[Container.ShowTitle]$INFO[Container.FolderName,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems,[COLOR=Highlight]  •  [/COLOR]]</value>
    <value condition="Window.IsActive(MyVideoPlaylist.xml)">$LOCALIZE[20012]</value>
    <value condition="Window.IsActive(MyMusicPlaylist.xml)">$LOCALIZE[20011]</value>
    <value condition="Window.IsActive(DialogVideoInfo.xml)">$LOCALIZE[20159]</value>
    <value condition="Window.IsActive(DialogFavourites.xml)">$LOCALIZE[1036]</value>
    <value condition="Container.content(movies) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20342][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
    <value condition="Container.content(tvshows) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20343][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
    <value condition="Container.content(musicvideos) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">$LOCALIZE[20389][COLOR=Highlight]  •  [/COLOR]$INFO[Container.NumItems]</value>
    <value condition="!String.IsEmpty(Container.FolderName)">$INFO[Container.FolderName,,[COLOR=Highlight]  •  [/COLOR]]$INFO[Container.NumItems]</value>
  </variable>

  <variable name="QuitLabel2" description="Label2 for skin settings Quit function item">
    <value condition="String.IsEqual(Skin.String(shutdown),quit)">$LOCALIZE[13009]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),powerdown)">$LOCALIZE[13005]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),hibernate)">$LOCALIZE[13010]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),suspend)">$LOCALIZE[13011]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),reboot)">$LOCALIZE[13013]</value>
    <value condition="String.IsEqual(Skin.String(shutdown),logoff) + System.HasLoginScreen">$LOCALIZE[20126]</value>
  </variable>

  <variable name="QuitAction" description="Action for Quit function item">
    <value condition="String.IsEqual(Skin.String(shutdown),quit)">quit()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),powerdown)">powerdown()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),hibernate)">hibernate()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),suspend)">suspend()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),reboot)">reboot()</value>
    <value condition="String.IsEqual(Skin.String(shutdown),logoff) + System.HasLoginScreen">System.logoff</value>
    <value>ActivateWindow(shutdownmenu)</value>
  </variable>

  <variable name="MovieEntryPoint" description="Action for Movie home button">
    <value condition="Skin.HasSetting(MovieEntry.RecentlyAdded)">ActivateWindow(Videos,RecentlyAddedMovies,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Playlists)">ActivateWindow(Videos,Playlists,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Files)">ActivateWindow(Videos,Files,return)</value>
    <value condition="Skin.HasSetting(MovieEntry.Library)">ActivateWindow(Videos,Movies,return)</value>
    <value>ActivateWindow(Videos,MovieTitles,return)</value>
  </variable>

  <variable name="MovieEntryPointLabel2" description="Label2 for skin settings Movies function item">
    <value condition="Skin.HasSetting(MovieEntry.RecentlyAdded)">$LOCALIZE[20386]</value>
    <value condition="Skin.HasSetting(MovieEntry.Playlists)">$LOCALIZE[136]</value>
    <value condition="Skin.HasSetting(MovieEntry.Files)">$LOCALIZE[744]</value>
    <value condition="Skin.HasSetting(MovieEntry.Library)">$LOCALIZE[15100]</value>
  </variable>

  <variable name="TVShowEntryPoint" description="Action for TV Show home button">
    <value condition="Skin.HasSetting(TVShowEntry.RecentlyAdded)">ActivateWindow(Videos,RecentlyAddedEpisodes,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Playlists)">ActivateWindow(Videos,Playlists,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Files)">ActivateWindow(Videos,Files,return)</value>
    <value condition="Skin.HasSetting(TVShowEntry.Library)">ActivateWindow(Videos,TvShows,return)</value>
    <value>ActivateWindow(Videos,TvShowTitles,return)</value>
  </variable>

  <variable name="TVShowEntryPointLabel2" description="Label2 for skin settings TV Show function item">
    <value condition="Skin.HasSetting(TVShowEntry.RecentlyAdded)">$LOCALIZE[20387]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Playlists)">$LOCALIZE[136]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Files)">$LOCALIZE[744]</value>
    <value condition="Skin.HasSetting(TVShowEntry.Library)">$LOCALIZE[15100]</value>
  </variable>

  <variable name="TVEntryPoint" description="Action for TV home button">
    <value condition="Skin.HasSetting(TVEntry.Guide)">ActivateWindow(TVGuide)</value>
    <value condition="Skin.HasSetting(TVEntry.Recordings)">ActivateWindow(TVRecordings)</value>
    <value>ActivateWindow(TVChannels)</value>
  </variable>

  <variable name="TVEntryPointLabel2" description="Label2 for skin settings TV function item">
    <value condition="Skin.HasSetting(TVEntry.Guide)">$LOCALIZE[22020]</value>
    <value condition="Skin.HasSetting(TVEntry.Recordings)">$LOCALIZE[19163]</value>
  </variable>

  <variable name="RadioEntryPoint" description="Action for Radio home button">
    <value condition="Skin.HasSetting(RadioEntry.Guide)">ActivateWindow(RadioGuide)</value>
    <value condition="Skin.HasSetting(RadioEntry.Recordings)">ActivateWindow(RadioRecordings)</value>
    <value>ActivateWindow(RadioChannels)</value>
  </variable>

  <variable name="RadioEntryPointLabel2" description="Label2 for skin settings Radio function item">
    <value condition="Skin.HasSetting(RadioEntry.Guide)">$LOCALIZE[22020]</value>
    <value condition="Skin.HasSetting(RadioEntry.Recordings)">$LOCALIZE[19163]</value>
  </variable>

  <variable name="SettingsLocationPointLabel2" description="Label2 for skin settings location item">
    <value condition="Skin.HasSetting(SettingsLocation.Home)">$LOCALIZE[31032]</value>
    <value condition="Skin.HasSetting(SettingsLocation.Quit)">$LOCALIZE[31033]</value>
  </variable>

  <variable name="MusicPlayingFanartLabel2" description="Label2 for music playing FA">
    <value condition="Skin.HasSetting(MusicPlayingFanart)">$LOCALIZE[449]</value>
    <value>$LOCALIZE[13113]</value>
  </variable>

  <variable name="MusicRepeat" description="Image to display in MusicOSD">
    <value condition="Control.HasFocus(606) + Playlist.IsRepeatOne">OSD/OSDRepeatOneFO.png</value>
    <value condition="!Control.HasFocus(606) + Playlist.IsRepeatOne">OSD/OSDRepeatOneNF.png</value>
    <value condition="Control.HasFocus(606) + Playlist.IsRepeat">OSD/OSDRepeatAllFO.png</value>
    <value condition="!Control.HasFocus(606) + Playlist.IsRepeat">OSD/OSDRepeatAllNF.png</value>
    <value condition="Control.HasFocus(606) + ![Playlist.IsRepeatOne | Playlist.IsRepeat]">OSD/OSD/OSDRepeatFO.png</value>
    <value condition="!Control.HasFocus(606) + [Playlist.IsRepeatOne | Playlist.IsRepeat]">OSD/OSD/OSDRepeatNF.png</value>
  </variable>

  <variable name="PVROverlay" description="PVR Overlay image">
    <value condition="ListItem.IsRecording">img/PVR-IsRecording.png</value>
    <value condition="ListItem.HasTimer">img/PVR-HasTimer.png</value>
  </variable>

  <variable name="ratingbadge">
    <value condition="!String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating,badges/ratings/rating,.png]</value>
    <value condition="String.IsEmpty(ListItem.UserRating) + !ListItem.IsParentFolder">badges/ratings/ratingNR.png</value>
  </variable>

  <variable name="Details" description="Shown Above Plots and descriptions">
    <value condition="Container.Content(images)">$INFO[ListItem.Date,, • ]$INFO[ListItem.Size]</value>
    <value condition="Container.content(Albums)">$INFO[ListItem.Artist]</value>
    <value condition="Container.Content(Episodes)">$INFO[ListItem.Premiered,,  • ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Rating,  • ]</value>
    <value condition="Container.Content(Addons)">$INFO[ListItem.AddonCreator,$LOCALIZE[21863] : ]</value>
    <value condition="Container.Content(songs) + !String.IsEmpty(ListItem.Album)">[COLOR=Grey]$LOCALIZE[558]:[/COLOR] $INFO[ListItem.Album]</value>
    <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_genre))">$INFO[ListItem.Property(artist_genre),[COLOR=Grey]$LOCALIZE[515]: [/COLOR]]</value>
    <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_style))">$INFO[ListItem.Property(artist_style),[COLOR=Grey]$LOCALIZE[176]: [/COLOR]]</value>
    <value condition="Container.Content(MusicVideos)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31297]]</value>
    <value condition="Container.Content(Movies)">$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[31297]]$INFO[ListItem.Rating, • ]$INFO[ListItem.MPAA, • ]</value>
		<value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ] [COLOR=Highlight]$INFO[ListItem.Property(UnWatchedEpisodes), (,) ][/COLOR]</value>
    <value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ]</value>
    <value>$INFO[ListItem.Label2]</value>
  </variable>

  <variable name="Item_Details" description="Shown Above Plots and descriptions">
    <value condition="Container.Content(images)">$INFO[ListItem.Date,, • ]$INFO[ListItem.Size]</value>
    <value condition="Container.content(Albums)">$INFO[ListItem.Artist]</value>
    <value condition="Container.Content(Episodes)">$INFO[ListItem.Premiered,,  • ]$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Rating,  • ]</value>
    <value condition="Container.Content(Addons)">$INFO[ListItem.AddonCreator]</value>
    <value condition="Container.Content(songs)">$INFO[ListItem.Duration]</value>
    <value condition="Container.Content(MusicVideos)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31297]]</value>
    <value condition="Container.Content(Movies)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,, $LOCALIZE[31297]]$INFO[ListItem.Rating, • ]</value>
    <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] ] [COLOR=Highlight]$INFO[ListItem.Property(UnWatchedEpisodes), (,) ][/COLOR]</value>
    <value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
    <value>$INFO[ListItem.Label2]</value>
  </variable>

  <variable name="panelheading">
    <value condition="ListItem.IsParentFolder">..</value>
    <value condition="Container.Content(Movies)">[B]$INFO[Listitem.Title,, ][/B]$INFO[ListItem.Year,(,)]</value>
    <value>$INFO[Listitem.label]</value>
  </variable>

  <variable name="panelsubheading">
    <value condition="Container.Content(Movies)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.Rating,[COLOR=Highlight] • [/COLOR]]$INFO[ListItem.MPAA,[COLOR=Highlight] • [/COLOR]]</value>
    <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Property(TotalEpisodes), $LOCALIZE[20360] ] [COLOR=Highlight]$INFO[ListItem.Property(UnWatchedEpisodes), (,) ][/COLOR]</value>
    <value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
    <value condition="Container.Content(Episodes)">$INFO[ListItem.Duration,,$LOCALIZE[31297]]$INFO[ListItem.Premiered , • ]$VAR[episoderating]$INFO[ListItem.MPAA, • ]</value>
    <value condition="Container.Content(albums)">$INFO[Listitem.AlbumArtist]</value>
    <value condition="Container.Content(songs)">$INFO[Listitem.Artist,, • ]$INFO[Listitem.Duration]</value>
    <value condition="Container.Content(images) + !ListItem.IsFolder">$INFO[Listitem.Size]$INFO[ListItem.PictureDateTime, • ,]</value>
    <value>$INFO[Listitem.Title]</value>
  </variable>

  <variable name="Plots" description="Plots and descriptions">
    <value condition="Container.content(addons) + !String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
    <value condition="ListItem.IsCollection + !String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
    <value condition="ListItem.IsCollection">$LOCALIZE[20457]</value>
    <value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Plot) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Plot]</value>
    <value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(Container.ShowPlot) + !String.IsEmpty(ListItem.Title)">$INFO[Container.ShowPlot]</value>
    <value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Property(album_mood)]</value>
    <value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.Property(album_description))">$INFO[ListItem.Property(album_description)]</value>
    <value condition="String.IsEqual(ListItem.DBType,album) + String.IsEmpty(ListItem.Property(album_description))">$LOCALIZE[414]</value>
    <value condition="String.IsEqual(ListItem.DBType,artist) + !String.IsEmpty(ListItem.Property(artist_description))">$INFO[ListItem.Property(artist_description)]</value>
    <value condition="Container.Content(images) + !String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
    <value condition="Container.Content(images) + !String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
    <value condition="Container.Content(images) + !String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
    <value condition="Container.Content(images)">[COLOR=Grey]$LOCALIZE[21821]:[/COLOR][CR]   $LOCALIZE[416]</value>
    <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
  </variable>

  <variable name="panelfooter">
    <value condition="Container.Content(Movies)">$INFO[Listitem.Genre][CR]$INFO[Listitem.Director,[COLOR=orange]$LOCALIZE[20339]:[/COLOR] ]</value>
    <value condition="Container.Content(TVShows)">$INFO[Listitem.Genre][CR]$INFO[Listitem.Season,[COLOR=orange]$LOCALIZE[33054]:[/COLOR] ][CAPITALIZE]$INFO[Listitem.Episode, • [COLOR=orange]$LOCALIZE[36907]:[/COLOR] ][/CAPITALIZE]</value>
    <value condition="Container.Content(Seasons)">$INFO[Listitem.Genre][CR][CAPITALIZE]$INFO[Listitem.Episode,[COLOR=orange]$LOCALIZE[36907]:[/COLOR] ][/CAPITALIZE]</value>
    <value condition="Container.Content(Episodes)">$INFO[Listitem.Genre][CR]$INFO[Listitem.Season,[COLOR=orange]$LOCALIZE[20373]:[/COLOR] ]$INFO[Listitem.Episode, • [COLOR=orange][CAPITALIZE]$LOCALIZE[20452][/CAPITALIZE]:[/COLOR] ]</value>
  </variable>

  <variable name="episoderating">
    <value condition="Skin.HasSetting(EpisodeRating.Hide)"></value>
    <value condition="!Skin.HasSetting(EpisodeRating.Hide)">$INFO[ListItem.Rating, • ]</value>
  </variable>

  <variable name="TVShows.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(TVShows.Background))">$INFO[Skin.String(TVShows.Background)]</value>
    <value>special://skin/backgrounds/TVShows.jpg</value>
  </variable>
  <variable name="Movies.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Movies.Background))">$INFO[Skin.String(Movies.Background)]</value>
    <value>special://skin/backgrounds/Movies.jpg</value>
  </variable>
  <variable name="MusicVideos.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(MusicVideos.Background))">$INFO[Skin.String(MusicVideos.Background)]</value>
    <value>special://skin/backgrounds/MusicVideos.jpg</value>
  </variable>
  <variable name="Videos.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Videos.Background))">$INFO[Skin.String(Videos.Background)]</value>
    <value>special://skin/backgrounds/Videos.jpg</value>
  </variable>
  <variable name="Music.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Music.Background))">$INFO[Skin.String(Music.Background)]</value>
    <value>special://skin/backgrounds/Music.jpg</value>
  </variable>
  <variable name="Pictures.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Pictures.Background))">$INFO[Skin.String(Pictures.Background)]</value>
    <value>special://skin/backgrounds/Pictures.jpg</value>
  </variable>
  <variable name="Weather.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Weather.Background))">$INFO[Skin.String(Weather.Background)]</value>
    <value>special://skin/backgrounds/Weather.jpg</value>
  </variable>
  <variable name="Favourites.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Favourites.Background))">$INFO[Skin.String(Favourites.Background)]</value>
    <value>special://skin/backgrounds/Favourites.jpg</value>
  </variable>
  <variable name="Addons.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Addons.Background))">$INFO[Skin.String(Addons.Background)]</value>
    <value>special://skin/backgrounds/Addons.jpg</value>
  </variable>
  <variable name="Settings.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Settings.Background))">$INFO[Skin.String(Settings.Background)]</value>
    <value>special://skin/backgrounds/Settings.jpg</value>
  </variable>
  <variable name="Pvr.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Pvr.Background))">$INFO[Skin.String(Pvr.Background)]</value>
    <value>special://skin/backgrounds/Pvr.jpg</value>
  </variable>
  <variable name="Radio.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Radio.Background))">$INFO[Skin.String(Radio.Background)]</value>
    <value>special://skin/backgrounds/Radio.jpg</value>
  </variable>
  <variable name="DVD.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(DVD.Background))">$INFO[Skin.String(DVD.Background)]</value>
    <value>special://skin/backgrounds/DVD.jpg</value>
  </variable>
  <variable name="Quit.Art" description="Calculate BG to show">
    <value condition="!String.IsEmpty(Skin.String(Quit.Background))">$INFO[Skin.String(Quit.Background)]</value>
    <value>special://skin/backgrounds/Quit.jpg</value>
  </variable>

  <variable name="Fanart.Art">
    <value condition="Window.IsActive(pictures) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
    <value condition="Window.IsActive(pictures) + !String.Contains(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
    <value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
    <value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
    <value condition="!String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
    <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
    <value>$VAR[SubDefaultBackground]</value>
  </variable>

  <variable name="SubBackground">
    <value condition="!Skin.HasSetting(Sub_FanArtBG)">$VAR[SubDefaultBackground]</value>
    <value>$VAR[Fanart.Art]</value>
  </variable>

  <variable name="SubDefaultBackground">
    <value condition="Skin.HasSetting(Sub_DefaultBG) + !String.IsEmpty(Skin.String(Default.Background))">$INFO[Skin.String(Default.Background)]</value>
    <value condition="Skin.HasSetting(Sub_DefaultBG)">special://skin/backgrounds/default/</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + [Container.Content(TvShows) | Container.Content(Seasons) | Container.Content(Episodes)]">$VAR[TVShows.Art]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(Movies)">$VAR[Movies.Art]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) + Container.Content(MusicVideos)">$VAR[MusicVideos.Art]</value>
    <value condition="Window.IsActive(MyVideoNav.xml) | Window.IsActive(videoplaylist)">$VAR[Videos.Art]</value>
    <value condition="Window.IsActive(MyMusicNav.xml) | Window.IsActive(musicplaylist)">$VAR[Music.Art]</value>
    <value condition="Window.IsActive(videoplaylist)">$LOCALIZE[10522]</value>
    <value condition="Window.IsActive(musicplaylist)">$LOCALIZE[10517]</value>
    <value condition="Window.IsActive(MyPics.xml)">$VAR[Pictures.Art]</value>
    <value condition="Window.IsActive(DialogFavourites.xml)">$VAR[Favourites.Art]</value>
    <value condition="Window.IsActive(MyWeather.xml)">$VAR[Weather.Art]</value>
    <value condition="Window.IsActive(MyPrograms.xml) | Window.IsActive(AddonBrowser.xml) | Window.IsActive(CustomAddons.xml)">$VAR[Addons.Art]</value>
    <value condition="Window.IsActive(Settings.xml) | Window.IsActive(SettingsCategory.xml) | Windows.IsActive(SettingsProfile.xml) | Window.IsActive(SettingsScreenCalibration.xml) | Window.IsActive(SettingsSystemInfo.xml) | Window.IsActive(EventLog.xml)">$VAR[Settings.Art]</value>
    <value condition="[Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyPVRTimers.xml)] + String.IsEmpty(Window.Property(IsRadio))">$VAR[Pvr.Art]</value>
    <value condition="[Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyPVRTimers.xml)] + !String.IsEmpty(Window.Property(IsRadio))">$VAR[Radio.Art]</value>
    <value>special://skin/backgrounds/default/</value>
  </variable>

  <variable name="HomeBackground">
    <value condition="Control.HasFocus(311) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(311).ListItem.Property(FanArt))">$INFO[Container(311).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(312) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(312).ListItem.Property(FanArt))">$INFO[Container(312).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(411) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(411).ListItem.Property(FanArt))">$INFO[Container(411).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(413) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(413).ListItem.Property(FanArt))">$INFO[Container(413).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(511) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(511).ListItem.Property(FanArt))">$INFO[Container(511).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(513) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(513).ListItem.Property(FanArt))">$INFO[Container(513).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(514) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(514).ListItem.Property(FanArt))">$INFO[Container(514).ListItem.Property(FanArt)]</value>
    <value condition="Control.HasFocus(515) + Skin.HasSetting(Home_FanArtBG) + !String.IsEmpty(Container(515).ListItem.Property(FanArt))">$INFO[Container(515).ListItem.Property(FanArt)]</value>
    <value condition="Skin.HasSetting(Home_DefaultBG) + !String.IsEmpty(Skin.String(Default.Background))">$INFO[Skin.String(Default.Background)]</value>
    <value condition="Skin.HasSetting(Home_DefaultBG)">special://skin/backgrounds/default/</value>
    <value>$INFO[Container(300).ListItem.Icon]</value>
  </variable>

  <variable name="SeekLabel">
    <value condition="!String.IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">$LOCALIZE[773][COLOR=Grey2] $INFO[Player.SeekStepSize][/COLOR]</value>
    <value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">$LOCALIZE[773][COLOR=Grey2] $INFO[Player.SeekOffset][/COLOR]</value>
    <value condition="!Player.DisplayAfterSeek + Player.Seeking">$LOCALIZE[773]</value>
  </variable>

  <variable name="ForwardRewindLabel">
    <value condition="Player.Forwarding2x | Player.Rewinding2x">2 X</value>
    <value condition="Player.Forwarding4x | Player.Rewinding4x">4 X</value>
    <value condition="Player.Forwarding8x | Player.Rewinding8x">8 X</value>
    <value condition="Player.Forwarding16x | Player.Rewinding16x">16 X</value>
    <value condition="Player.Forwarding32x | Player.Rewinding32x">32 X</value>
  </variable>

  <variable name="DialogBusyLabel">
    <value condition="Integer.IsGreater(Control.GetLabel(10), 0)">$LOCALIZE[31979]$INFO[Control.GetLabel(10), ,%]</value>
    <value>$LOCALIZE[31979]</value>
  </variable>

  <expression name="SettingsAddon1to5Visibility">!String.IsEmpty(Skin.String(ShelfAddons.1.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.2.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.3.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.4.Label)) + !String.IsEmpty(Skin.String(ShelfAddons.5.Label))</expression>

</includes>
